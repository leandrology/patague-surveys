{
  "version": 3,
  "sources": ["../../../lodash/isNumber.js", "../../../lodash/camelCase.js", "../../../lodash/kebabCase.js", "../../../toggle-selection/index.js", "../../../copy-to-clipboard/index.js", "../../../react-copy-to-clipboard/lib/Component.js", "../../../react-copy-to-clipboard/lib/index.js", "../../../sanity/src/desk/components/Delay.tsx", "../../../sanity/src/desk/components/DocTitle.tsx", "../../../sanity/src/desk/components/TimeAgo.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/useReferringDocuments.ts", "../../../sanity/src/desk/components/PublishedStatus.tsx", "../../../sanity/src/desk/components/DraftStatus.tsx", "../../../sanity/src/desk/components/paneItem/PaneItemPreview.tsx", "../../../sanity/src/desk/components/paneRouter/PaneRouterContext.tsx", "../../../sanity/src/desk/components/paneRouter/BackLink.tsx", "../../../sanity/src/desk/components/paneRouter/ChildLink.tsx", "../../../sanity/src/desk/components/paneRouter/ReferenceChildLink.tsx", "../../../sanity/src/desk/components/paneRouter/ParameterizedLink.tsx", "../../../sanity/src/desk/components/paneRouter/usePaneRouter.ts", "../../../sanity/src/desk/components/confirmDeleteDialog/ReferencePreviewLink.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/index.tsx", "../../../sanity/src/desk/components/pane/PaneMenuButtonItem.tsx", "../../../sanity/src/desk/components/pane/PaneContextMenuButton.tsx", "../../../sanity/src/desk/components/pane/constants.ts", "../../../sanity/src/desk/components/pane/PaneContext.ts", "../../../sanity/src/desk/components/pane/PaneLayoutContext.ts", "../../../sanity/src/desk/components/pane/usePaneLayout.ts", "../../../sanity/src/desk/components/pane/PaneDivider.tsx", "../../../sanity/src/desk/components/pane/Pane.tsx", "../../../sanity/src/desk/components/pane/usePane.ts", "../../../sanity/src/desk/components/pane/PaneContent.styles.tsx", "../../../sanity/src/desk/components/pane/PaneContent.tsx", "../../../sanity/src/desk/components/pane/PaneFooter.styles.tsx", "../../../sanity/src/desk/components/pane/PaneFooter.tsx", "../../../sanity/src/desk/components/pane/PaneHeader.styles.tsx", "../../../sanity/src/desk/components/pane/PaneHeader.tsx", "../../../sanity/src/desk/components/pane/PaneHeaderActionButton.tsx", "../../../sanity/src/desk/components/pane/PaneLayout.styles.tsx", "../../../sanity/src/desk/menuNodes.ts", "../../../sanity/src/desk/components/IntentButton.tsx", "../../../sanity/src/desk/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx", "../../../sanity/src/desk/components/paneHeaderActions/PaneHeaderCreateButton.tsx", "../../../sanity/src/desk/components/paneHeaderActions/PaneHeaderActions.tsx", "../../../sanity/src/desk/documentActions/DeleteAction.tsx", "../../../sanity/src/desk/documentActions/DiscardChangesAction.tsx", "../../../sanity/src/desk/documentActions/DuplicateAction.tsx", "../../../sanity/src/desk/documentActions/HistoryRestoreAction.tsx", "../../../sanity/src/desk/panes/document/DocumentPaneContext.ts", "../../../sanity/src/desk/panes/document/useDocumentPane.tsx", "../../../sanity/src/desk/documentActions/PublishAction.tsx", "../../../sanity/src/desk/documentActions/UnpublishAction.tsx", "../../../sanity/src/desk/documentBadges/LiveEditBadge.ts", "../../../sanity/src/desk/constants.ts", "../../../sanity/src/desk/getIntentState.ts", "../../../sanity/src/desk/router.ts", "../../../sanity/src/desk/panes/document/constants.ts", "../../../sanity/src/desk/panes/document/documentInspector/DocumentInspectorHeader.tsx", "../../../sanity/src/desk/DeskToolContext.ts", "../../../sanity/src/desk/useDeskTool.ts", "../../../sanity/src/desk/panes/document/documentInspector/Resizer.tsx", "../../../sanity/src/desk/panes/document/documentInspector/Resizable.tsx", "../../../sanity/src/desk/panes/document/inspectors/validation/getPathTypes.ts", "../../../sanity/src/desk/panes/document/inspectors/validation/ValidationInspector.tsx", "../../../sanity/src/desk/panes/document/inspectors/validation/index.ts", "../../../sanity/src/desk/panes/document/timeline/constants.ts", "../../../sanity/src/desk/panes/document/timeline/helpers.ts", "../../../sanity/src/desk/panes/document/timeline/userAvatarStack.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineItem.styled.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineItem.tsx", "../../../sanity/src/desk/panes/document/timeline/timeline.styled.tsx", "../../../sanity/src/desk/panes/document/timeline/timeline.tsx", "../../../sanity/src/desk/panes/document/timeline/TimelineError.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineMenu.tsx", "../../../sanity/src/desk/panes/document/inspectors/changes/LoadingContent.tsx", "../../../sanity/src/desk/panes/document/inspectors/changes/helpers.ts", "../../../sanity/src/desk/panes/document/inspectors/changes/ChangesInspector.tsx", "../../../sanity/src/desk/panes/document/inspectors/changes/index.ts", "../../../sanity/src/desk/deskTool.ts", "../../../sanity/src/desk/panes/document/menuItems.ts", "../../../sanity/src/desk/panes/document/usePreviewUrl.ts", "../../../sanity/src/desk/panes/document/getInitialValueTemplateOpts.ts", "../../../sanity/src/desk/panes/document/DocumentInspectorMenuItemsResolver.tsx", "../../../sanity/src/desk/panes/document/DocumentPaneProvider.tsx", "../../../sanity/src/desk/structureBuilder/SerializeError.ts", "../../../sanity/src/desk/structureBuilder/util/getExtendedProjection.ts", "../../../sanity/src/desk/structureBuilder/Sort.ts", "../../../sanity/src/desk/structureBuilder/MenuItem.ts", "../../../sanity/src/desk/structureBuilder/MenuItemGroup.ts", "../../../sanity/src/desk/structureBuilder/util/validateId.ts", "../../../sanity/src/desk/structureBuilder/util/getStructureNodeId.ts", "../../../sanity/src/desk/structureBuilder/Component.ts", "../../../sanity/src/desk/structureBuilder/util/resolveTypeForDocument.ts", "../../../sanity/src/desk/structureBuilder/views/View.ts", "../../../sanity/src/desk/structureBuilder/views/ComponentView.ts", "../../../sanity/src/desk/structureBuilder/views/FormView.ts", "../../../sanity/src/desk/structureBuilder/views/index.ts", "../../../sanity/src/desk/structureBuilder/Document.ts", "../../../sanity/src/desk/structureBuilder/Layout.ts", "../../../sanity/src/desk/structureBuilder/Intent.ts", "../../../sanity/src/desk/structureBuilder/InitialValueTemplateItem.ts", "../../../sanity/src/desk/structureBuilder/GenericList.ts", "../../../sanity/src/desk/structureBuilder/DocumentList.ts", "../../../sanity/src/desk/structureBuilder/List.ts", "../../../sanity/src/desk/structureBuilder/ListItem.ts", "../../../sanity/src/desk/structureBuilder/DocumentListItem.ts", "../../../sanity/src/desk/structureBuilder/DocumentTypeList.ts", "../../../sanity/src/desk/structureBuilder/documentTypeListItems.ts", "../../../sanity/src/desk/structureBuilder/createStructureBuilder.ts", "../../../sanity/src/desk/DeskToolProvider.tsx"],
  "sourcesContent": ["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n", "var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n", "\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n", "\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nvar _excluded = [\"text\", \"onCopy\", \"options\", \"children\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  var _super = _createSuper(CopyToClipboard);\n\n  function CopyToClipboard() {\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, _excluded);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return /*#__PURE__*/_react[\"default\"].cloneElement(elem, _objectSpread(_objectSpread({}, props), {}, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});", "\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;", "import React, {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n", "import {SanityDocumentLike} from '@sanity/types'\nimport React from 'react'\nimport {useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>Unknown schema type: {documentValue._type}</code>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n", "import React from 'react'\nimport {useTimeAgo} from 'sanity'\n\nexport interface TimeAgoProps {\n  time: string | Date\n}\n\nexport function TimeAgo({time}: TimeAgoProps) {\n  const timeAgo = useTimeAgo(time)\n\n  return <span title={timeAgo}>{timeAgo} ago</span>\n}\n", "import {useMemo} from 'react'\nimport {ClientError, SanityClient} from '@sanity/client'\nimport {Observable, timer, fromEvent, EMPTY, of} from 'rxjs'\nimport {\n  map,\n  startWith,\n  distinctUntilChanged,\n  switchMap,\n  shareReplay,\n  catchError,\n} from 'rxjs/operators'\nimport {\n  AvailabilityResponse,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentStore,\n  useDocumentStore,\n  createHookFromObservableFactory,\n  getDraftId,\n  getPublishedId,\n  useClient,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY\n      ),\n      shareReplay({refCount: true, bufferSize: 1})\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient}\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    })\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient}\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          })\n        )\n    })\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000}\n    ) as Observable<ReferringDocuments['internalReferences']>\n  }\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        })\n      )\n    )\n  }\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId])\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient])\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean)\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== '')\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string'\n      )\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n", "import React from 'react'\nimport {PublishIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function PublishedStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Published {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>Not published</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"positive\" dimmed={!document} muted={!document} size={1}>\n        <PublishIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n", "import React from 'react'\nimport {EditIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function DraftStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Edited {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>No unpublished edits</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"caution\" dimmed={!document} muted={!document} size={1}>\n        <EditIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n", "import type {SanityDocument, SchemaType} from '@sanity/types'\nimport React, {isValidElement} from 'react'\nimport {isNumber, isString} from 'lodash'\nimport {Inline} from '@sanity/ui'\nimport {useMemoObservable} from 'react-rx'\nimport {PublishedStatus} from '../PublishedStatus'\nimport {DraftStatus} from '../DraftStatus'\nimport type {PaneItemPreviewState} from './types'\nimport {\n  DocumentPresence,\n  DocumentPreviewPresence,\n  DocumentPreviewStore,\n  GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  isRecord,\n} from 'sanity'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title]\n  )!\n\n  const status = isLoading ? null : (\n    <Inline space={4}>\n      {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n      <PublishedStatus document={published} />\n      <DraftStatus document={draft} />\n    </Inline>\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n    />\n  )\n}\n", "import {createContext} from 'react'\nimport {PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n})\n", "import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {BackLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n", "import React, {forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ChildLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n", "import React, {forwardRef} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n", "import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n", "import {useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n", "import React, {useCallback} from 'react'\nimport type {SanityDocument, SchemaType} from '@sanity/types'\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\nimport {\n  FIXME,\n  PreviewCard,\n  getPublishedId,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: React.ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id]\n  )\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      onClick={onClick}\n      padding={2}\n      radius={2}\n    >\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"default\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n", "import React from 'react'\nimport styled from 'styled-components'\nimport {rem, Flex, Text, Card, Box, Tooltip, Container, Inline} from '@sanity/ui'\nimport {InfoOutlineIcon} from '@sanity/icons'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const TableContainer = styled(Box).attrs({paddingX: 2, paddingBottom: 2})`\n  overflow: auto;\n  max-height: 150px;\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  thead > tr {\n    position: sticky;\n    top: 0;\n    background: var(--card-bg-color);\n    z-index: 1;\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 35px;\n`\n\nexport const ReferencesCard = styled(Card).attrs({\n  radius: 2,\n  shadow: 1,\n  marginBottom: 4,\n  flex: 'auto',\n})`\n  overflow: hidden;\n  overflow: clip;\n  min-height: 150px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Inline space={2}>\n      <Text size={1} muted>\n        {difference} other reference{difference === 1 ? '' : 's'} not shown{' '}\n      </Text>\n\n      <Tooltip\n        portal\n        placement=\"top\"\n        content={\n          <Container width={0}>\n            <Box padding={2}>\n              <Text size={1}>\n                We can't show metadata about these references because no token with access to the\n                datasets they are in was found.\n              </Text>\n            </Box>\n          </Container>\n        }\n      >\n        <Text size={1} muted>\n          <InfoOutlineIcon />\n        </Text>\n      </Tooltip>\n    </Inline>\n  )\n}\n", "import React, {useCallback} from 'react'\nimport {\n  WarningOutlineIcon,\n  DocumentsIcon,\n  ClipboardIcon,\n  UnknownIcon,\n  ChevronDownIcon,\n} from '@sanity/icons'\nimport {useToast, Text, Box, Button, Flex, Label, Card, Stack} from '@sanity/ui'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {ReferringDocuments} from './useReferringDocuments'\nimport {\n  ReferencesCard,\n  OtherReferenceCount,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  TableContainer,\n  Table,\n  ChevronWrapper,\n  DocumentIdFlex,\n} from './ConfirmDeleteDialogBody.styles'\nimport {SanityDefaultPreview, useSchema} from 'sanity'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: string\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title=\"Preview Unavailable\"\n            subtitle={`ID: ${item._id}`}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, onReferenceLinkClick]\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\">\n        Are you sure you want to {action} <strong>“{documentTitle}”</strong>?\n      </Text>\n    )\n  }\n\n  const documentCount =\n    crossDatasetReferences.totalCount === 1\n      ? '1 document'\n      : `${crossDatasetReferences.totalCount.toLocaleString()} documents`\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n  const datasetsCount =\n    normalizedDatasetNames.length === 1\n      ? 'another dataset'\n      : `${normalizedDatasetNames.length} datasets`\n\n  let datasetNameList = `Dataset${\n    normalizedDatasetNames.length === 1 ? '' : 's'\n  }: ${normalizedDatasetNames.join(', ')}`\n\n  // We only have one dataset, and it is unavailable due to permissions\n  if (hasUnknownDatasetNames && normalizedDatasetNames.length === 1) {\n    datasetNameList = 'Unavailable dataset'\n  }\n\n  return (\n    <>\n      <Card padding={3} radius={2} tone=\"caution\" marginBottom={4} flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              {totalCount === 1 ? (\n                <>1 document refers to “{documentTitle}”</>\n              ) : (\n                <>\n                  {totalCount.toLocaleString()} documents refer to “{documentTitle}”\n                </>\n              )}\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\" marginBottom={4}>\n        <Text>\n          You may not be able to {action} “{documentTitle}” because the following documents refer to\n          it:\n        </Text>\n      </Box>\n\n      <ReferencesCard>\n        <Flex direction=\"column\" height=\"fill\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" padding={3} space={3} overflow=\"auto\" data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Flex padding={4} align=\"center\">\n                  <Box marginRight={4}>\n                    <Text size={3}>\n                      <DocumentsIcon />\n                    </Text>\n                  </Box>\n                  <Flex marginRight={4} direction=\"column\">\n                    <Box marginBottom={2}>\n                      <Text>\n                        {documentCount} in {datasetsCount}\n                      </Text>\n                    </Box>\n                    <Box>\n                      <Text title={datasetNameList} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetNameList}\n                      </Text>\n                    </Box>\n                  </Flex>\n                  <ChevronWrapper>\n                    <Text muted>\n                      <ChevronDownIcon />\n                    </Text>\n                  </ChevronWrapper>\n                </Flex>\n              </CrossDatasetReferencesSummary>\n\n              <TableContainer>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Label muted size={0}>\n                          Project ID\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Dataset\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Document ID\n                        </Label>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    // TODO: this isn't visible with the dialog open\n                                    toast.push({\n                                      title: 'Copied document ID to clipboard!',\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    title=\"Copy ID to clipboard\"\n                                    mode=\"bleed\"\n                                    icon={ClipboardIcon}\n                                    fontSize={0}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n                <Box padding={2}>\n                  <OtherReferenceCount {...crossDatasetReferences} />\n                </Box>\n              </TableContainer>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </ReferencesCard>\n\n      <Box flex=\"none\">\n        <Text>\n          If you {action} this document, documents that refer to it will no longer be able to access\n          it.\n        </Text>\n      </Box>\n    </>\n  )\n}\n", "import React, {useMemo, useId} from 'react'\nimport styled from 'styled-components'\nimport {Box, Dialog, Button, Text, Spinner, Grid, Flex} from '@sanity/ui'\nimport {DocTitle} from '../DocTitle'\nimport {useReferringDocuments} from './useReferringDocuments'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\n\n/** @internal */\nexport const DialogBody = styled(Flex).attrs({\n  padding: 4,\n  direction: 'column',\n  height: 'fill',\n})`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 300px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: string\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`\n\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={`${capitalizedAction} document?`}\n      footer={\n        <Grid columns={showConfirmButton ? 2 : 1} gap={2} paddingX={4} paddingY={3}>\n          <Button mode=\"ghost\" onClick={onCancel} text=\"Cancel\" />\n\n          {showConfirmButton && (\n            <Button\n              data-testid=\"confirm-delete-button\"\n              text={totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`}\n              tone=\"critical\"\n              onClick={onConfirm}\n            />\n          )}\n        </Grid>\n      }\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <Spinner muted />\n            <Box marginTop={3}>\n              <Text align=\"center\" muted size={1}>\n                Looking for referring documents…\n              </Text>\n            </Box>\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n", "import React, {useCallback, useState, useId} from 'react'\nimport {Box, Flex, Button, Dialog, Text, ErrorBoundary} from '@sanity/ui'\nimport {ConfirmDeleteDialog, ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<React.ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header=\"Error\"\n      footer={\n        <Flex paddingX={4} paddingY={3} direction=\"column\">\n          <Button mode=\"ghost\" text=\"Retry\" onClick={handleRetry} />\n        </Flex>\n      }\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text>An error occurred while loading referencing documents.</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n", "import {CheckmarkIcon} from '@sanity/icons'\nimport {Box, Label, MenuDivider, MenuGroup, MenuItem, PopoverProps, Text} from '@sanity/ui'\nimport React, {useCallback, MouseEvent} from 'react'\nimport {Intent} from '../../structureBuilder'\nimport {_PaneMenuItem, _PaneMenuNode} from './types'\nimport {TooltipOfDisabled} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.title && (\n            <Box padding={2} paddingBottom={1}>\n              <Label muted size={0}>\n                {node.title}\n              </Label>\n            </Box>\n          )}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={node.title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={node.title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node]\n  )\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={node.title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n", "import {EllipsisVerticalIcon} from '@sanity/icons'\nimport {Menu, MenuButton, PopoverProps} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {_PaneMenuItem, _PaneMenuNode} from './types'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {StatusButton} from 'sanity'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <StatusButton\n          icon={EllipsisVerticalIcon}\n          mode=\"bleed\"\n          title=\"Show menu\"\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n", "/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n", "import {createContext} from 'react'\nimport {PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n", "import {createContext} from 'react'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n", "import {useContext} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n", "import {Layer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize]\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n", "import {BoundaryElementProvider, Card, CardProps, Code, Flex, useForwardedRef} from '@sanity/ui'\nimport React, {forwardRef, useMemo, useState, useCallback, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneProps {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef]\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement]\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement]\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth]\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            data-ui=\"Pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n", "import {useContext} from 'react'\nimport {PaneContext} from './PaneContext'\nimport {PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n", "import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n", "import {BoxOverflow} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\nimport {Root} from './PaneContent.styles'\n\ninterface PaneContentProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n", "import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n", "import {Box} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneFooterProps {\n  children?: React.ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n", "import {Box, Flex, Layer, rgba, TextSkeleton, Text, Theme, Card} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  line-height: 0;\n  position: sticky;\n  top: 0;\n\n  &:not([data-collapsed]):after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    overflow: hidden;\n    overflow: clip;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      overflow: auto;\n      /* Hide scrollbars */\n      scrollbar-width: none;\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    /* right padding */\n    & > div:after {\n      content: '';\n      display: inline-block;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${space[3]}px;\n      height: 1px;\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n", "import {useElementRect, Box, Card, Flex, LayerProvider} from '@sanity/ui'\nimport React, {useMemo, useCallback, forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Layout, Root, TabsBox, TitleCard, TitleTextSkeleton, TitleText} from './PaneHeader.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: React.ReactNode\n  backButton?: React.ReactNode\n  contentAfter?: React.ReactNode\n  loading?: boolean\n  subActions?: React.ReactNode\n  tabIndex?: number\n  tabs?: React.ReactNode\n  title: React.ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {actions, backButton, contentAfter, loading, subActions, tabs, tabIndex, title} = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect]\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root data-collapsed={collapsed ? '' : undefined} data-testid=\"pane-header\" ref={ref}>\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout onClick={handleLayoutClick} padding={2} sizing=\"border\" style={layoutStyle}>\n              {backButton && (\n                <Box flex=\"none\" padding={1}>\n                  {backButton}\n                </Box>\n              )}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                forwardedAs=\"button\"\n                marginRight={actions ? 1 : 0}\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 3}\n                paddingY={3}\n                tabIndex={tabIndex}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} />}\n                {!loading && (\n                  <TitleText textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Box flex=\"none\" hidden={collapsed}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n            </Layout>\n\n            {showTabsOrSubActions && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                overflow=\"auto\"\n                paddingBottom={3}\n                paddingX={3}\n                paddingTop={1}\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  {tabs}\n                </TabsBox>\n\n                {subActions && subActions}\n              </Flex>\n            )}\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n", "import React, {MouseEvent, useCallback, useId} from 'react'\nimport {ButtonProps, Menu, MenuButton, Text} from '@sanity/ui'\nimport {UnknownIcon} from '@sanity/icons'\nimport {Intent} from '../../structureBuilder'\nimport {_PaneMenuGroup, _PaneMenuItem} from './types'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {TooltipOfDisabled, StatusButton} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n  padding?: ButtonProps['padding']\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node, padding} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} padding={padding} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} padding={padding} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n  padding?: ButtonProps['padding']\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node, padding} = props\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const disabledTooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n\n  return (\n    <TooltipOfDisabled content={disabledTooltipContent} placement=\"bottom\">\n      <StatusButton\n        disabled={Boolean(node.disabled)}\n        hotkey={node.hotkey?.split('+')}\n        icon={node.icon}\n        label={disabledTooltipContent ? undefined : node.title}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        padding={padding}\n        selected={node.selected}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {\n  intent: Intent\n  node: _PaneMenuItem\n  padding?: ButtonProps['padding']\n}) {\n  const {intent, node, padding} = props\n  const disabledTooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node]\n  )\n\n  return (\n    <TooltipOfDisabled content={disabledTooltipContent} placement=\"bottom\">\n      <StatusButton\n        as=\"a\"\n        disabled={Boolean(node.disabled)}\n        hotkey={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        label={disabledTooltipContent ? undefined : node.title}\n        onClick={handleClick}\n        padding={padding}\n        selected={node.selected}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n  padding?: ButtonProps['padding']\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node, padding} = props\n\n  return (\n    <MenuButton\n      button={\n        <StatusButton\n          disabled={node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={node.title}\n          padding={padding}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n", "import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n", "/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\nimport {_PaneMenuGroup, _PaneMenuItem, _PaneMenuNode} from './components/pane/types'\nimport {PaneMenuItem, PaneMenuItemGroup} from './types'\nimport {DocumentFieldActionNode} from 'sanity'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`)\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    tone: a.tone,\n  }\n}\n", "import {Button} from '@sanity/ui'\nimport React, {forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../types'\nimport {IntentLink} from 'sanity/router'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {intent: RouterIntent} & Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent]\n  )\n\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n", "import {Tooltip, Text, Box} from '@sanity/ui'\nimport React from 'react'\nimport {useCurrentUser, InsufficientPermissionsMessage} from 'sanity'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          <Box padding={2}>\n            <Text>Loading…</Text>\n          </Box>\n        ) : (\n          <InsufficientPermissionsMessage currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n", "import {ComposeIcon} from '@sanity/icons'\nimport React, {useMemo, forwardRef} from 'react'\nimport {Box, Button, Label, Menu, MenuButton, MenuItem, PopoverProps} from '@sanity/ui'\nimport {Schema} from '@sanity/types'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\nimport {IntentLink} from 'sanity/router'\nimport {\n  useTemplatePermissions,\n  TemplatePermissionsResult,\n  Template,\n  InitialValueTemplateItem,\n  useSchema,\n  useTemplates,\n} from 'sanity'\n\nexport type PaneHeaderIntentProps = React.ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {}\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip reveal loading={isTemplatePermissionsLoading}>\n        <Button\n          aria-label=\"Insufficient permissions\"\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          disabled\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n      >\n        <IntentButton\n          aria-label={firstItem.title}\n          icon={firstItem.icon || ComposeIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={<Button icon={ComposeIcon} mode=\"bleed\" data-testid=\"multi-action-intent-button\" />}\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n            <Label muted>Create</Label>\n          </Box>\n\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((t) => t.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              )\n            )\n\n            Link.displayName = 'Link'\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={item.title || template.title}\n                  aria-label={disabled ? 'Insufficient permissions' : item.title || template.title}\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n", "import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {DeskToolPaneActionHandler, PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\nimport {useTemplates, InitialValueTemplateItem, EMPTY_ARRAY, EMPTY_OBJECT} from 'sanity'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, DeskToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, DeskToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n          ? actionHandlers[item.action]\n          : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers]\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems]\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters])\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n", "/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport React, {useCallback, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DELETE: 'This document doesn’t yet exist or is already deleted',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: 'Delete',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"delete this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title:\n      (deleteOp.disabled &&\n        DISABLED_REASON_TITLE[deleteOp.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: isDeleting ? 'Deleting…' : 'Delete',\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'custom',\n      component: (\n        <ConfirmDeleteDialog\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n", "/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {\n  DocumentActionComponent,\n  DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NO_CHANGES: 'This document has no unpublished changes',\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to discard all changes since last published?</>,\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete]\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: 'Discard changes',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"discard changes in this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title:\n      (discardChanges.disabled &&\n        DISABLED_REASON_TITLE[discardChanges.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: 'Discard changes',\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n", "import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport React, {useCallback, useState} from 'react'\nimport {useRouter} from 'sanity/router'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useDocumentOperation,\n  useCurrentUser,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DUPLICATE: 'This document doesn’t yet exist so there‘s nothing to duplicate',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const {duplicate} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(() => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n    duplicate.execute(dupeId)\n    navigateIntent('edit', {id: dupeId, type})\n    onComplete()\n  }, [duplicate, navigateIntent, onComplete, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: 'Duplicate',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"duplicate this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? 'Duplicating…' : 'Duplicate',\n    title:\n      (duplicate.disabled &&\n        DISABLED_REASON_TITLE[duplicate.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n", "import {RestoreIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {DocumentActionComponent, DocumentActionDialogProps, useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n    // wrapping in setTimeout gives the onComplete time to finish before navigating\n    setTimeout(() => navigateIntent('edit', {id, type}), 0)\n  }, [restore, revision, navigateIntent, id, type, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to restore this document?</>,\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: 'Restore',\n    color: 'primary',\n    onHandle: handle,\n    title: isRevisionInitialVersion\n      ? \"You can't restore to the initial version\"\n      : 'Restore to this version',\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n", "import {\n  ValidationMarker,\n  Path,\n  SanityDocument,\n  ObjectSchemaType,\n  SanityDocumentLike,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {View} from '../../structureBuilder'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {TimelineMode} from './types'\nimport {\n  DocumentActionComponent,\n  DocumentBadgeComponent,\n  DocumentFieldAction,\n  DocumentFormNode,\n  DocumentInspector,\n  DocumentLanguageFilterComponent,\n  DocumentPermission,\n  EditStateFor,\n  PatchEvent,\n  PermissionCheckResult,\n  StateTree,\n  TimelineStore,\n} from 'sanity'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  closeInspector: (inspectorName?: string) => void\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  fieldActions: DocumentFieldAction[]\n  focusPath: Path\n  index: number\n  inspectOpen: boolean\n  inspector: DocumentInspector | null\n  inspectors: DocumentInspector[]\n  menuItemGroups: PaneMenuItemGroup[]\n  menuItems: PaneMenuItem[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onKeyUp: (event: React.KeyboardEvent<HTMLDivElement>) => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  openInspector: (inspectorName: string, paneParams?: Record<string, string>) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  source?: string\n  timelineError: Error | null\n  timelineMode: TimelineMode\n  timelineStore: TimelineStore\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n", "import {useContext} from 'react'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n", "import {CheckmarkIcon, PublishIcon} from '@sanity/icons'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {TimeAgo} from '../components'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useSyncState,\n  useValidationStatus,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  LIVE_EDIT_ENABLED: 'Cannot publish since liveEdit is enabled for this document type',\n  ALREADY_PUBLISHED: 'Already published',\n  NO_CHANGES: 'No unpublished changes',\n  NOT_READY: 'Operation not ready',\n}\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE,\n  publishedAt: string | undefined\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return (\n      <>\n        <span>\n          Published <TimeAgo time={publishedAt} />\n        </span>\n      </>\n    )\n  }\n  return DISABLED_REASON_TITLE[reason]\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt) || ''\n    : hasValidationErrors\n    ? 'There are validation errors that need to be fixed before this document can be published'\n    : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const handle = useCallback(() => {\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title:\n        'Live Edit is enabled for this content type and publishing happens automatically as you make changes',\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"publish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'positive',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? 'Published'\n        : publishScheduled || publishState === 'publishing'\n        ? 'Publishing…'\n        : 'Publish',\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: publishState === 'published' ? CheckmarkIcon : PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? 'Waiting for tasks to finish before publishing'\n      : publishState === 'published' || publishState === 'publishing'\n      ? null\n      : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n", "import {UnpublishIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useCurrentUser,\n  useDocumentOperation,\n  DocumentActionModalDialogProps,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"unpublish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: 'Unpublish',\n    title: unpublish.disabled\n      ? DISABLED_REASON_TITLE[unpublish.disabled as keyof typeof DISABLED_REASON_TITLE]\n      : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n", "import {DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n", "/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n", "import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n", "import {omit} from 'lodash'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\nimport {route} from 'sanity/router'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n", "import {PaneRouterContextValue} from '../../components'\nimport {PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/desk/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/desk/validation'\n", "import {CloseIcon} from '@sanity/icons'\nimport {Box, Button, Card, CardProps, Flex, Text} from '@sanity/ui'\nimport React, {HTMLProps, ReactNode} from 'react'\nimport styled from 'styled-components'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n\n  '&:after': {\n    content: '\"\"',\n    display: 'block',\n    position: 'absolute',\n    left: 0,\n    bottom: -1,\n    right: 0,\n    borderBottom: '1px solid var(--card-border-color)',\n    opacity: 0.5,\n  },\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"semibold\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            fontSize={1}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            padding={2}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n", "import {createContext} from 'react'\nimport {DeskToolContextValue} from './types'\n\nexport const DeskToolContext = createContext<DeskToolContextValue | null>(null)\n", "import {useContext} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {DeskToolContextValue} from './types'\n\n/** @internal */\nexport function useDeskTool(): DeskToolContextValue {\n  const deskTool = useContext(DeskToolContext)\n\n  if (!deskTool) throw new Error(`DeskTool: missing context value`)\n\n  return deskTool\n}\n", "import React, {useCallback, useRef} from 'react'\nimport styled from 'styled-components'\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: -4px;\n  bottom: 0;\n  width: 9px;\n  z-index: 201;\n  cursor: ew-resize;\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n    opacity: 0.5;\n  }\n\n  /* Hover effect */\n  & > span:nth-child(2) {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 9px;\n    bottom: 0;\n    background-color: var(--card-border-color);\n    opacity: 0;\n    transition: opacity 150ms;\n  }\n\n  @media (hover: hover) {\n    &:hover > span:nth-child(2) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport function Resizer(props: {onResize: (delta: number) => void; onResizeStart: () => void}) {\n  const {onResize, onResizeStart} = props\n\n  const mouseXRef = useRef(0)\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault()\n\n      mouseXRef.current = event.pageX\n\n      onResizeStart()\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n        onResize(e.pageX - mouseXRef.current)\n      }\n\n      const handleMouseUp = () => {\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [onResize, onResizeStart]\n  )\n\n  return (\n    <Root onMouseDown={handleMouseDown}>\n      {/* Hover effect */}\n      <span />\n\n      {/* Border */}\n      <span />\n    </Root>\n  )\n}\n", "import React, {HTMLProps, useCallback, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {Box, BoxProps} from '@sanity/ui'\nimport {Resizer} from './Resizer'\n\nexport interface ResizableProps {\n  minWidth: number\n  maxWidth: number\n}\n\nconst Root = styled(Box)`\n  position: relative;\n  flex: 1;\n  padding-left: 1px;\n`\n\nexport function Resizable(\n  props: ResizableProps & BoxProps & Omit<HTMLProps<HTMLDivElement>, 'as'>\n) {\n  const {as: forwardedAs, children, minWidth, maxWidth, ...restProps} = props\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const elementWidthRef = useRef<number>()\n  const [targetWidth, setTargetWidth] = useState<number>()\n\n  const handleResizeStart = useCallback(() => {\n    elementWidthRef.current = element?.offsetWidth\n  }, [element])\n\n  const handleResize = useCallback(\n    (deltaX: number) => {\n      const w = elementWidthRef.current\n\n      if (!w) return\n\n      setTargetWidth(Math.min(Math.max(w - deltaX, minWidth), maxWidth))\n    },\n    [minWidth, maxWidth]\n  )\n\n  const style = useMemo(\n    () => (targetWidth ? {flex: 'none', width: targetWidth} : {minWidth, maxWidth}),\n    [minWidth, maxWidth, targetWidth]\n  )\n\n  return (\n    <Root as={forwardedAs} {...restProps} ref={setElement} style={style}>\n      {children}\n      <Resizer onResize={handleResize} onResizeStart={handleResizeStart} />\n    </Root>\n  )\n}\n", "/* eslint-disable no-loop-func */\n\nimport {Path, SanityDocument, SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTypes(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): SchemaType[] {\n  const {path, schemaType, value} = options\n  const result: SchemaType[] = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        throw new Error(`Field type not found: .${segment}`)\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an anrray, cannot get path segment: [_key == ${segment}]`\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n", "import {ErrorOutlineIcon, IconComponent, InfoOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, CardTone, ErrorBoundary, Flex, Stack, Text} from '@sanity/ui'\nimport {ObjectSchemaType, Path, SanityDocument, SchemaType, ValidationMarker} from '@sanity/types'\nimport React, {ErrorInfo, Fragment, createElement, useCallback, useMemo, useState} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {getPathTypes} from './getPathTypes'\nimport {DocumentInspectorProps, pathToString} from 'sanity'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen]\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel=\"Close validation\"\n        flex=\"none\"\n        onClose={onClose}\n        title=\"Validation\"\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              No validation errors\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker) => (\n              <ValidationCard\n                key={pathToString(marker.path)}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>ERROR: {errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>{createElement(MARKER_ICON[marker.level])}</Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.item.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTypes = useMemo(\n    () => getPathTypes({path, schemaType, value}),\n    [path, schemaType, value]\n  )\n\n  return (\n    <Text size={1}>\n      {pathTypes.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n", "import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\nimport {\n  DocumentInspector,\n  DocumentInspectorMenuItem,\n  DocumentInspectorUseMenuItemProps,\n  FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  useValidationStatus,\n} from 'sanity'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {validation: validationMarkers} = useValidationStatus(documentId, documentType)\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.item.message,\n        path: item.path,\n      })),\n    [validationMarkers]\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: 'Validation',\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n", "import {\n  TrashIcon,\n  EditIcon,\n  IconComponent,\n  PublishIcon,\n  UnpublishIcon,\n  CloseIcon,\n  AddCircleIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_LABELS: {[key: string]: string | undefined} = {\n  create: 'created',\n  delete: 'deleted',\n  discardDraft: 'discarded draft',\n  initial: 'created',\n  editDraft: 'edited',\n  editLive: 'live edited',\n  publish: 'published',\n  unpublish: 'unpublished',\n}\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n", "import {IconComponent} from '@sanity/icons'\nimport {TIMELINE_ICON_COMPONENTS, TIMELINE_LABELS} from './constants'\nimport {ChunkType} from 'sanity'\n\nexport function formatTimelineEventLabel(type: ChunkType): string | undefined {\n  return TIMELINE_LABELS[type]\n}\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n", "import React from 'react'\nimport {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n", "import {Text, Box, Button, Theme, Flex, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport interface IconWrapperProps {\n  theme: Theme\n}\n\nexport const IconWrapper = styled(Flex)(({theme}: IconWrapperProps) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(Button)(({$selected}: {$selected: boolean}) => {\n  return css`\n    position: relative;\n    width: 100%;\n\n    /* Line styling */\n    &[data-first] ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &[data-last] ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${$selected &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const EventLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n", "import React, {useCallback, createElement, useMemo} from 'react'\nimport {Box, ButtonTone, Card, Flex, Label, Stack, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {formatTimelineEventLabel, getTimelineEventIconComponent} from './helpers'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {EventLabel, IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {ChunkType, Chunk} from 'sanity'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonTone> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\ninterface TimelineItemProps {\n  chunk: Chunk\n  isFirst: boolean\n  isLast: boolean\n  isLatest: boolean\n  isSelected: boolean\n  onSelect: (chunk: Chunk) => void\n  timestamp: string\n  type: ChunkType\n}\n\nexport function TimelineItem({\n  chunk,\n  isFirst,\n  isLast,\n  isLatest,\n  isSelected,\n  onSelect,\n  timestamp,\n  type,\n}: TimelineItemProps) {\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n\n    return formattedDate\n  }, [timestamp])\n\n  const handleClick = useCallback(\n    (evt: React.MouseEvent<HTMLButtonElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      onSelect(chunk)\n    },\n    [onSelect, chunk]\n  )\n\n  return (\n    <Root\n      $selected={isSelected}\n      data-chunk-id={chunk.id}\n      data-first={isFirst ? true : undefined}\n      data-last={isLast ? true : undefined}\n      data-ui=\"timelineItem\"\n      mode={isSelected ? 'default' : 'bleed'}\n      onClick={handleClick}\n      padding={0}\n      radius={2}\n      tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n    >\n      <Box paddingX={2}>\n        <Flex align=\"stretch\">\n          <IconWrapper align=\"center\">\n            <IconBox padding={2}>\n              <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n            </IconBox>\n          </IconWrapper>\n\n          <Stack space={2} margin={2}>\n            {isLatest && (\n              <Flex>\n                <Card\n                  padding={1}\n                  radius={2}\n                  shadow={1}\n                  tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n                >\n                  <Label muted size={0}>\n                    Latest\n                  </Label>\n                </Card>\n              </Flex>\n            )}\n            <Box>\n              <EventLabel size={1} weight=\"medium\">\n                {formatTimelineEventLabel(type) || <code>{type}</code>}\n              </EventLabel>\n            </Box>\n            <TimestampBox paddingX={1}>\n              <Text size={0} muted>\n                {formattedTimestamp}\n              </Text>\n            </TimestampBox>\n          </Stack>\n          <Flex flex={1} justify=\"flex-end\" align=\"center\">\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n          </Flex>\n        </Flex>\n      </Box>\n    </Root>\n  )\n}\n", "import {Box, Flex, Stack} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)`\n  max-height: calc(100vh - 198px);\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)(({$visible}: {$visible?: boolean}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n", "import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {TimelineItem} from './timelineItem'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {Chunk, CommandList, CommandListRenderItemCallback} from 'sanity'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  disabledBeforeFirstChunk?: boolean\n  firstChunk?: Chunk | null\n  hasMoreChunks: boolean\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n}\n\nexport const Timeline = ({\n  chunks,\n  disabledBeforeFirstChunk,\n  hasMoreChunks,\n  lastChunk,\n  onLoadMore,\n  onSelect,\n  firstChunk,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n\n  const filteredChunks = useMemo(() => {\n    return chunks.filter((c) => {\n      if (disabledBeforeFirstChunk && firstChunk) {\n        return c.index < firstChunk.index\n      }\n      return true\n    })\n  }, [chunks, disabledBeforeFirstChunk, firstChunk])\n\n  const selectedIndex = useMemo(\n    () => (lastChunk?.id ? filteredChunks.findIndex((c) => c.id === lastChunk.id) : -1),\n    [lastChunk?.id, filteredChunks]\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<Chunk>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n      const isLast = (filteredChunks && activeIndex === filteredChunks.length - 1) || false\n      return (\n        <Box paddingBottom={isLast ? 1 : 0} paddingTop={isFirst ? 1 : 0} paddingX={1}>\n          <TimelineItem\n            chunk={chunk}\n            isFirst={isFirst}\n            isLast={isLast}\n            isLatest={activeIndex === 0 && !disabledBeforeFirstChunk}\n            isSelected={activeIndex === selectedIndex}\n            onSelect={onSelect}\n            timestamp={chunk.endTimestamp}\n            type={chunk.type}\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && (\n            <Flex align=\"center\" justify=\"center\" padding={4}>\n              <Spinner muted />\n            </Flex>\n          )}\n        </Box>\n      )\n    },\n    [disabledBeforeFirstChunk, filteredChunks, hasMoreChunks, onSelect, selectedIndex]\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            No document history\n          </Text>\n          <Text muted size={1}>\n            When changing the content of the document, the document versions will appear in this\n            menu.\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel=\"Document revisions\"\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={40}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n", "import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport React from 'react'\nimport {TextWithTone} from 'sanity'\n\nexport function TimelineError() {\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"semibold\">\n          An error occurred whilst retrieving document changes.\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          Document history transactions have not been affected.\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n", "import {SelectIcon} from '@sanity/icons'\nimport {Button, Placement, Popover, useClickOutside, useGlobalKeyDown, useToast} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {upperFirst} from 'lodash'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {TimelineError} from './TimelineError'\nimport {formatTimelineEventLabel} from './helpers'\nimport {Timeline} from './timeline'\nimport {Chunk, useTimelineSelector} from 'sanity'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, setTimelineMode, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    if (open) {\n      handleClose()\n    }\n  }, [handleClose, open])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open]\n  )\n\n  useClickOutside(handleClickOutside, [button, popover])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForRev(revChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForSince(sinceChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = timelineError ? (\n    <TimelineError />\n  ) : (\n    <>\n      {mode === 'rev' && (\n        <Timeline\n          chunks={chunks}\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )}\n      {mode === 'since' && (\n        <Timeline\n          chunks={chunks}\n          disabledBeforeFirstChunk\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={sinceTime}\n          onLoadMore={handleLoadMore}\n          onSelect={selectSince}\n        />\n      )}\n    </>\n  )\n\n  const timeLabel = useFormattedTimestamp(chunk?.endTimestamp || '')\n\n  const revLabel = chunk\n    ? `${upperFirst(formatTimelineEventLabel(chunk.type))}: ${timeLabel}`\n    : 'Latest version'\n\n  const sinceLabel = chunk ? `Since: ${timeLabel}` : 'Since: unknown version'\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={open && content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n      ref={setPopover}\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        fontSize={1}\n        padding={2}\n        iconRight={SelectIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        style={{maxWidth: '100%'}}\n        text={ready ? buttonLabel : 'Loading history'}\n      />\n    </Root>\n  )\n}\n\nexport function useFormattedTimestamp(time: string): string {\n  const formatted = useMemo(() => {\n    const parsedDate = time ? new Date(time) : new Date()\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n    return formattedDate\n  }, [time])\n\n  return formatted\n}\n", "import React from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {Delay} from '../../../../components'\n\nexport function LoadingContent() {\n  return (\n    <Delay ms={300}>\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" paddingTop={3}>\n        <Spinner muted />\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            Loading changes\n          </Text>\n        </Box>\n      </Flex>\n    </Delay>\n  )\n}\n", "import {AnnotationDetails, visitDiff, Diff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n", "import {ObjectDiff} from '@sanity/diff'\nimport {AvatarStack, BoundaryElementProvider, Box, Card, Flex} from '@sanity/ui'\nimport React, {ReactElement, useRef} from 'react'\nimport styled from 'styled-components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {LoadingContent} from './LoadingContent'\nimport {collectLatestAuthorAnnotations} from './helpers'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  DocumentChangeContextInstance,\n  DocumentInspectorProps,\n  NoChanges,\n  ObjectSchemaType,\n  ScrollContainer,\n  UserAvatar,\n  useTimelineSelector,\n} from 'sanity'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesInspector(props: DocumentInspectorProps): ReactElement {\n  const {onClose} = props\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n\n  // Subscribe to external timeline state changes\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  const documentContext: DocumentChangeContextInstance = React.useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value]\n  )\n\n  const changeAnnotations = React.useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff]\n  )\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel=\"Close review changes\"\n        flex=\"none\"\n        onClose={onClose}\n        title=\"Review changes\"\n      >\n        <Flex gap={1} padding={3} paddingTop={0} paddingBottom={2}>\n          <Box flex={1}>\n            <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          </Box>\n\n          <Box flex=\"none\">\n            <DiffTooltip annotations={changeAnnotations} description=\"Changes by\" portal>\n              <AvatarStack maxLength={4}>\n                {changeAnnotations.map(({author}) => (\n                  <UserAvatar key={author} user={author} />\n                ))}\n              </AvatarStack>\n            </DiffTooltip>\n          </Box>\n        </Flex>\n      </DocumentInspectorHeader>\n\n      <Card flex={1}>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content\n                diff={diff}\n                documentContext={documentContext}\n                error={timelineError}\n                loading={loading}\n                schemaType={schemaType}\n              />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingContent />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n", "import {RestoreIcon} from '@sanity/icons'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {ChangesInspector} from './ChangesInspector'\nimport {DocumentInspector} from 'sanity'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useDeskTool()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: 'Review changes',\n    }\n  },\n  component: ChangesInspector,\n  onClose: ({params}) => ({params: {...params, since: undefined}}),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n", "import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {definePlugin} from 'sanity'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\n/**\n * The deskTool is a studio plugin which adds the “desk tool” – a tool within Sanity Studio in which\n * content editors can drill down to specific documents to edit them.\n * You can configure your Studio's desk tool(s).\n *\n * @public\n * @param options - Options for the desk tool. See {@link DeskToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { deskTool } from 'sanity/desk'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    deskTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your desk tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { deskTool } from 'sanity/desk'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    deskTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const deskTool = definePlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  document: {\n    actions: (prevActions) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document actions already exist in the Studio config\n      const actions = prevActions.slice(0)\n      for (const action of documentActions) {\n        if (!actions.includes(action)) actions.push(action)\n      }\n      return actions\n    },\n    badges: (prevBadges) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document badges already exist in the Studio config\n      const badges = prevBadges.slice(0)\n      for (const badge of documentBadges) {\n        if (!badges.includes(badge)) badges.push(badge)\n      }\n      return badges\n    },\n    inspectors: [validationInspector, changesInspector],\n  },\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n", "import {BinaryDocumentIcon, EarthAmericasIcon} from '@sanity/icons'\nimport {DeskToolFeatures, PaneMenuItem} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\nimport {DocumentInspector, DocumentInspectorMenuItem, ValidationMarker} from 'sanity'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: DeskToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        isDisabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: 'Inspect',\n    icon: BinaryDocumentIcon,\n    isDisabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: 'Open preview',\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n", "import {useEffect, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {useAsObservable} from 'react-rx'\nimport {debounceTime, switchMap, catchError} from 'rxjs/operators'\nimport {from, of} from 'rxjs'\nimport {useSource, isRecord} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined)\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        })\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n", "import {Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n", "import React, {memo, useCallback, useEffect, useRef, useState} from 'react'\nimport {DocumentInspector, DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface InspectorMenuItemProps {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}\n\nconst InspectorMenuItem = memo(function InspectorMenuItem(props: InspectorMenuItemProps) {\n  const {documentId, documentType, index, setMenuItem, useMenuItem} = props\n\n  const node = useUnique(\n    useMenuItem({\n      documentId,\n      documentType,\n    })\n  )\n\n  useEffect(() => {\n    setMenuItem(index, node)\n  }, [index, node, setMenuItem])\n\n  return <></>\n})\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const lenRef = useRef(len)\n\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len))\n  )\n\n  const menuItemsRef = useRef(menuItems)\n\n  useEffect(() => {\n    if (lenRef.current !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItemsRef.current[i]\n      }\n\n      lenRef.current = len\n\n      setMenuItems(() => {\n        menuItemsRef.current = newFieldActions\n        return newFieldActions\n      })\n    }\n  }, [len])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      menuItemsRef.current = next\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  return (\n    <>\n      {inspectors.map(\n        (inspector, inspectorIndex) =>\n          inspector.useMenuItem && (\n            <InspectorMenuItem\n              documentId={documentId}\n              documentType={documentType}\n              index={inspectorIndex}\n              key={inspector.name}\n              setMenuItem={setMenuItem}\n              useMenuItem={inspector.useMenuItem}\n            />\n          )\n      )}\n    </>\n  )\n}\n", "import React, {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectSchemaType, Path, SanityDocument, SanityDocumentLike} from '@sanity/types'\nimport {omit, set} from 'lodash'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport isHotkey from 'is-hotkey'\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {usePaneRouter} from '../../components'\nimport {PaneMenuItem} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getMenuItems} from './menuItems'\nimport {DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {\n  DEFAULT_MENU_ITEM_GROUPS,\n  EMPTY_PARAMS,\n  HISTORY_INSPECTOR_NAME,\n  INSPECT_ACTION_PREFIX,\n} from './constants'\nimport {DocumentInspectorMenuItemsResolver} from './DocumentInspectorMenuItemsResolver'\nimport {\n  DocumentInspector,\n  DocumentPresence,\n  PatchEvent,\n  StateTree,\n  toMutationPatches,\n  getExpandOperations,\n  getPublishedId,\n  setAtPath,\n  useConnectionState,\n  useDocumentOperation,\n  useEditState,\n  useFormState,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useUnique,\n  useValidationStatus,\n  getDraftId,\n  useDocumentValuePermissions,\n  useTimelineStore,\n  useTimelineSelector,\n  DocumentFieldAction,\n  DocumentInspectorMenuItem,\n  FieldActionsResolver,\n  EMPTY_ARRAY,\n  DocumentFieldActionNode,\n  FieldActionsProvider,\n} from 'sanity'\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey} = props\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_fieldActions: fieldActionsResolver,\n    unstable_languageFilter: languageFilterResolver,\n    inspectors: inspectorsResolver,\n  } = useSource().document\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {features} = useDeskTool()\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params, panePayload, templates]\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch} = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType]\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType]\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver]\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : []\n  )\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n  /**\n   * Create an intermediate store which handles document Timeline + TimelineController\n   * creation, and also fetches pre-requsite document snapshots. Compatible with `useSyncExternalStore`\n   * and made available to child components via DocumentPaneContext.\n   */\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  // Subscribe to external timeline state changes\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(timelineStore, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(timelineStore, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(timelineStore, (state) => state.timelineReady)\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver]\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = inspectors?.find((i) => i.name === inspectorName)\n  const resolvedChangesInspector = inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME)\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const hasValue = Boolean(value)\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n      }),\n    [currentInspector, features, hasValue, inspectorMenuItems, inspectors, previewUrl]\n  )\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? sinceAttributes\n    : editState?.published || null\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType]\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready =\n    connectionState === 'connected' && editState.ready && (timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => (onOlderRevision ? timelineDisplayed || {_id: value._id, _type: value._type} : value),\n    [onOlderRevision, timelineDisplayed, value]\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams]\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, presenceStore, setFocusPath]\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      setFocusPath([])\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [setFocusPath]\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: PatchEvent) => patchRef.current(event), [])\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      // inspector?: DocumentInspector\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setPaneParams]\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setPaneParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setPaneParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setPaneParams]\n  )\n\n  const handleHistoryClose = useCallback(() => {\n    if (resolvedChangesInspector) {\n      closeInspector(resolvedChangesInspector.name)\n    }\n  }, [closeInspector, resolvedChangesInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (resolvedChangesInspector) {\n      openInspector(resolvedChangesInspector.name)\n    }\n  }, [features.reviewChanges, openInspector, resolvedChangesInspector])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setPaneParams({...params, inspect: 'on'})\n      } else {\n        setPaneParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setPaneParams]\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX)) {\n        const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n        const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n        if (nextInspector) {\n          if (nextInspector.name === inspectorName) {\n            closeInspector(nextInspector.name)\n          } else {\n            openInspector(nextInspector.name)\n          }\n          return true\n        }\n      }\n\n      return false\n    },\n    [\n      closeInspector,\n      handleHistoryOpen,\n      inspectorName,\n      inspectors,\n      openInspector,\n      previewUrl,\n      toggleLegacyInspect,\n    ]\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            handleMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [handleMenuAction, menuItems]\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect]\n  )\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    []\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = Boolean(schemaType?.liveEdit)\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n    const isLocked = editState.transactionSyncLock?.enabled\n\n    return (\n      !ready ||\n      revTime !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting ||\n      isLocked\n    )\n  }, [\n    connectionState,\n    isNonExistent,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    revTime,\n    schemaType,\n    editState.transactionSyncLock,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const setOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef]\n  )\n\n  const documentPane: DocumentPaneContextValue = {\n    actions,\n    activeViewId,\n    badges,\n    changesOpen,\n    closeInspector,\n    collapsedFieldSets,\n    collapsedPaths,\n    compareValue,\n    connectionState,\n    displayed,\n    documentId,\n    documentIdRaw,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspector: currentInspector || null,\n    inspectors,\n    menuItems,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onPathOpen: setOpenPath,\n    onHistoryClose: handleHistoryClose,\n    onHistoryOpen: handleHistoryOpen,\n    onInspectClose: handleLegacyInspectClose,\n    onKeyUp: handleKeyUp,\n    onMenuAction: handleMenuAction,\n    onPaneClose: handlePaneClose,\n    onPaneSplit: handlePaneSplit,\n    onSetActiveFieldGroup: handleSetActiveFieldGroup,\n    onSetCollapsedPath: handleOnSetCollapsedPath,\n    onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n    openInspector,\n    index,\n    inspectOpen,\n    validation,\n    menuItemGroups: menuItemGroups || [],\n    paneKey,\n    previewUrl,\n    ready,\n    schemaType: schemaType!,\n    isPermissionsLoading,\n    permissions,\n    setTimelineMode,\n    setTimelineRange,\n    timelineError,\n    timelineMode,\n    timelineStore,\n    title,\n    value,\n    views,\n    formState,\n    unstable_languageFilter: languageFilter,\n  }\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/desk/reconnecting',\n        status: 'warning',\n        title: <>Connection lost. Reconnecting…</>,\n      })\n    }\n  }, [connectionState, pushToast])\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      // Reset focus path when url params path changes\n      setFocusPath(pathFromUrl)\n      setOpenPath(pathFromUrl)\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n  }, [params, documentId, setOpenPath, ready, paneRouter])\n\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {/* Resolve root-level field actions */}\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        {children}\n      </FieldActionsProvider>\n    </DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n", "import {SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n}\n", "import {SchemaType, SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name)\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n", "import {SortOrdering} from '@sanity/types'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n", "import {SchemaType, SortOrdering, SortOrderingItem} from '@sanity/types'\nimport {SortIcon} from '@sanity/icons'\nimport {getExtendedProjection} from './util/getExtendedProjection'\nimport {Intent} from './Intent'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Menu item action type\n * @public */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/**\n * Menu items parameters\n *\n * @public */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/**\n * Interface for menu items\n *\n * @public */\nexport interface MenuItem {\n  /** Menu Item title */\n  title: string\n  /** Menu Item action */\n  action?: MenuItemActionType\n  /** Menu Item intent */\n  intent?: Intent\n  /** Menu Item group */\n  group?: string\n  // TODO: align these with TemplateItem['icon']\n  /** Menu Item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** Menu Item parameters. See {@link MenuItemParamsType} */\n  params?: MenuItemParamsType\n  /** Determine if it will show the MenuItem as action */\n  showAsAction?: boolean\n}\n\n/**\n * Partial menu items\n * @public\n */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/**\n * Class for building menu items.\n *\n * @public */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  /** menu item option object. See {@link PartialMenuItem} */\n  protected spec: PartialMenuItem\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItem\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set menu item action\n   * @param action - menu item action. See {@link MenuItemActionType}\n   * @returns menu item builder based on action provided. See {@link MenuItemBuilder}\n   */\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  /**\n   * Get menu item action\n   * @returns menu item builder action. See {@link PartialMenuItem}\n   */\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  /**\n   * Set menu item intent\n   * @param intent - menu item intent. See {@link Intent}\n   * @returns menu item builder based on intent provided. See {@link MenuItemBuilder}\n   */\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  /**\n   * Get menu item intent\n   * @returns menu item intent. See {@link PartialMenuItem}\n   */\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  /**\n   * Set menu item title\n   * @param title - menu item title\n   * @returns menu item builder based on title provided. See {@link MenuItemBuilder}\n   */\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  /**\n   * Get menu item title\n   * @returns menu item title\n   */\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  /**\n   * Set menu item group\n   * @param group - menu item group\n   * @returns menu item builder based on group provided. See {@link MenuItemBuilder}\n   */\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  /**\n   * Get menu item group\n   * @returns menu item group. See {@link PartialMenuItem}\n   */\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  /**\n   * Set menu item icon\n   * @param icon - menu item icon\n   * @returns menu item builder based on icon provided. See {@link MenuItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Get menu item icon\n   * @returns menu item icon. See {@link PartialMenuItem}\n   */\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set menu item parameters\n   * @param params - menu item parameters. See {@link MenuItemParamsType}\n   * @returns menu item builder based on parameters provided. See {@link MenuItemBuilder}\n   */\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  /**\n   * Get meny item parameters\n   * @returns menu item parameters. See {@link PartialMenuItem}\n   */\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  /**\n   * Set menu item to show as action\n   * @param showAsAction - determine if menu item should show as action\n   * @returns menu item builder based on if it should show as action. See {@link MenuItemBuilder}\n   */\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  /**\n   * Check if menu item should show as action\n   * @returns true if menu item should show as action, false if not. See {@link PartialMenuItem}\n   */\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  /** Serialize menu item builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns menu item node based on path provided in options. See {@link MenuItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  /** Clone menu item builder\n   * @param withSpec - menu item options. See {@link PartialMenuItem}\n   * @returns menu item builder based on context and spec provided. See {@link MenuItemBuilder}\n   */\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  ordering: SortOrdering,\n  extendedProjection?: string\n): MenuItemBuilder {\n  return new MenuItemBuilder(context)\n    .group('sorting')\n    .title(`Sort by ${ordering.title}`)\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by: ordering.by, extendedProjection})\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by))\n  )\n}\n", "import {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Interface for menu item groups\n * @public\n */\nexport interface MenuItemGroup {\n  /** Menu group Id */\n  id: string\n  /** Menu group title */\n  title: string\n}\n\n/**\n * Class for building menu item groups.\n *\n * @public\n */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  /** Menu item group ID */\n  protected _id: string\n  /** Menu item group title */\n  protected _title: string\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItemGroup\n  ) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n  }\n\n  /**\n   * Set menu item group ID\n   * @param id - menu item group ID\n   * @returns menu item group builder based on ID provided. See {@link MenuItemGroupBuilder}\n   */\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title})\n  }\n\n  /**\n   * Get menu item group ID\n   * @returns menu item group ID\n   */\n  getId(): string {\n    return this._id\n  }\n\n  /**\n   * Set menu item group title\n   * @param title - menu item group title\n   * @returns menu item group builder based on title provided. See {@link MenuItemGroupBuilder}\n   */\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id: this._id, title})\n  }\n\n  /**\n   * Get menu item group title\n   * @returns menu item group title\n   */\n  getTitle(): string {\n    return this._title\n  }\n\n  /**\n   * Serialize menu item group builder\n   * @param options - serialization options (path). See {@link SerializeOptions}\n   * @returns menu item group based on path provided in options. See {@link MenuItemGroup}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n    }\n  }\n}\n", "import {SerializeError} from '../SerializeError'\nimport {SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  return id\n}\n", "import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n", "import {SerializeOptions, StructureNode, Serializable, Child} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {validateId} from './util/validateId'\nimport {UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * Interface for component\n *\n * @public\n */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component menu items, array of type {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** Component menu item group, array of type {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n  /** Component options */\n  options: {[key: string]: unknown}\n}\n\n/**\n * Interface for component input\n *\n * @public\n */\nexport interface ComponentInput extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for buildable component\n *\n * @public\n */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  /** Component of type {@link UserComponent} */\n  component?: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Class for building components\n *\n * @public\n */\nexport class ComponentBuilder implements Serializable<Component> {\n  /** component builder option object */\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  /** Set Component ID\n   * @param id - component ID\n   * @returns component builder based on ID provided\n   */\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get ID\n   * @returns ID\n   */\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  /** Set Component title\n   * @param title - component title\n   * @returns component builder based on title provided (and ID)\n   */\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Component title\n   * @returns title\n   */\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  /** Set Component child\n   * @param child - child component\n   * @returns component builder based on child component provided\n   */\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Component child\n   * @returns child component\n   */\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  /** Set component\n   * @param component - user built component\n   * @returns component builder based on component provided\n   */\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  /** Get Component\n   * @returns component\n   */\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  /** Set Component options\n   * @param options - component options\n   * @returns component builder based on options provided\n   */\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  /** Get Component options\n   * @returns component options\n   */\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  /** Set Component menu items\n   * @param menuItems - component menu items\n   * @returns component builder based on menuItems provided\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  /** Get Component menu items\n   * @returns menu items\n   */\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set Component menu item groups\n   * @param menuItemGroups - component menu item groups\n   * @returns component builder based on menuItemGroups provided\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get Component menu item groups\n   * @returns menu item groups\n   */\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Serialize component\n   * @param options - serialization options\n   * @returns component object based on path provided in options\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path)\n      ),\n    }\n  }\n\n  /** Clone component builder (allows for options overriding)\n   * @param withSpec - component builder options\n   * @returns cloned builder\n   */\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import type {SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'}\n  )\n\n  return types[0]\n}\n", "import {kebabCase} from 'lodash'\nimport {Serializable, SerializeOptions, SerializePath} from '../StructureNodes'\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {validateId} from '../util/validateId'\nimport {View} from '../types'\nimport {ComponentViewBuilder} from './ComponentView'\nimport {FormViewBuilder} from './FormView'\n\n/**\n * Interface for base view\n *\n * @public */\nexport interface BaseView {\n  /** View id */\n  id: string\n  /** View Title */\n  title: string\n  /** View Icon */\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/**\n * Class for building generic views.\n *\n * @public\n */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  /** Generic view option object */\n  protected spec: TView = {} as TView\n\n  /** Set generic view ID\n   * @param id - generic view ID\n   * @returns generic view builder based on ID provided. See {@link ConcreteImpl}\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n  /** Get generic view ID\n   * @returns generic view ID\n   */\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic view title\n   * @param title - generic view title\n   * @returns generic view builder based on title provided and (if provided) its ID. See {@link ConcreteImpl}\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  /** Get generic view title\n   * @returns generic view title\n   */\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  /** Set generic view icon\n   * @param icon - generic view icon\n   * @returns generic view builder based on icon provided. See {@link ConcreteImpl}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  /** Get generic view icon\n   * @returns generic view icon\n   */\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  /** Serialize generic view\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic view object based on path provided in options. See {@link BaseView}\n   */\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - Partial generic view builder options. See {@link BaseView}\n   * @returns Generic view builder. See {@link ConcreteImpl}\n   */\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/**\n * View builder. See {@link ComponentViewBuilder} and {@link FormViewBuilder}\n *\n * @public\n */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n", "import {SerializeOptions} from '../StructureNodes'\nimport {SerializeError, HELP_URL} from '../SerializeError'\nimport type {UserViewComponent} from '../types'\nimport {BaseView, GenericViewBuilder} from './View'\nimport {isRecord} from 'sanity'\n\n/**\n * Interface for component views.\n *\n * @public */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  /** Component view components. See {@link UserViewComponent} */\n  component: UserViewComponent\n  /** Component view options */\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/**\n * Class for building a component view.\n *\n * @public */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  /** Partial Component view option object. See {@link ComponentView} */\n  protected spec: Partial<ComponentView>\n\n  constructor(\n    /**\n     * Component view component or spec\n     * @param componentOrSpec - user view component or partial component view. See {@link UserViewComponent} and {@link ComponentView}\n     */\n    componentOrSpec?: UserViewComponent | Partial<ComponentView>\n  ) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  /** Set view Component\n   * @param component - component view component. See {@link UserViewComponent}\n   * @returns component view builder based on component view provided. See {@link ComponentViewBuilder}\n   */\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  /** Get view Component\n   * @returns Partial component view. See {@link ComponentView}\n   */\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  /** Set view Component options\n   * @param options - component view options\n   * @returns component view builder based on options provided. See {@link ComponentViewBuilder}\n   */\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  /** Get view Component options\n   * @returns component view options. See {@link ComponentView}\n   */\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  /** Serialize view Component\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns component view based on path provided in options. See {@link ComponentView}\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  /** Clone Component view builder (allows for options overriding)\n   * @param withSpec - partial for component view option. See {@link ComponentView}\n   * @returns component view builder. See {@link ComponentViewBuilder}\n   */\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {SerializeOptions} from '../StructureNodes'\nimport {BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for form views.\n *\n * @public */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/**\n * Class for building a form view.\n *\n * @public */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  /** Document list options. See {@link FormView} */\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  /**\n   * Serialize Form view builder\n   * @param options - Serialize options. See {@link SerializeOptions}\n   * @returns form view builder based on path provided in options. See {@link FormView}\n   */\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  /**\n   * Clone Form view builder (allows for options overriding)\n   * @param withSpec - Partial form view builder options. See {@link FormView}\n   * @returns form view builder. See {@link FormViewBuilder}\n   */\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import type {UserViewComponent} from '../types'\nimport {ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {FormView, FormViewBuilder} from './FormView'\n\nexport * from './FormView'\nexport * from './ComponentView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n", "import {uniq} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {ChildResolver} from './ChildResolver'\nimport {SerializeOptions, Serializable, Child, DocumentNode, EditorNode} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {validateId} from './util/validateId'\nimport {ViewBuilder, maybeSerializeView} from './views/View'\nimport {form} from './views'\nimport type {StructureContext, View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/**\n * Interface for options of Partial Documents. See {@link PartialDocumentNode}\n *\n * @public */\nexport interface DocumentOptions {\n  /** Document Id */\n  id: string\n  /** Document Type */\n  type: string\n  /** Document Template */\n  template?: string\n  /** Template parameters */\n  templateParameters?: Record<string, unknown>\n}\n\n/**\n * Interface for partial document (focused on the document pane)\n *\n * @public */\nexport interface PartialDocumentNode {\n  /** Document Id */\n  id?: string\n  /** Document title */\n  title?: string\n  /** Document children of type {@link Child} */\n  child?: Child\n  /**\n   * Views for the document pane. See {@link ViewBuilder} and {@link View}\n   */\n  views?: (View | ViewBuilder)[]\n  /**\n   * Document options. See {@link DocumentOptions}\n   */\n  options?: Partial<DocumentOptions>\n}\n\n/**\n * A `DocumentBuilder` is used to build a document node.\n *\n * @public */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  /** Component builder option object See {@link PartialDocumentNode} */\n  protected spec: PartialDocumentNode\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: PartialDocumentNode\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set Document Builder ID\n   * @param id - document builder ID\n   * @returns document builder based on ID provided. See {@link DocumentBuilder}\n   */\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get Document Builder ID\n   * @returns document ID. See {@link PartialDocumentNode}\n   */\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  /** Set Document title\n   * @param title - document title\n   * @returns document builder based on title provided (and ID). See {@link DocumentBuilder}\n   */\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Document title\n   * @returns document title. See {@link PartialDocumentNode}\n   */\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  /** Set Document child\n   * @param child - document child\n   * @returns document builder based on child provided. See {@link DocumentBuilder}\n   */\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Document child\n   * @returns document child. See {@link PartialDocumentNode}\n   */\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  /** Set Document ID\n   * @param documentId - document ID\n   * @returns document builder with document based on ID provided. See {@link DocumentBuilder}\n   */\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  /** Get Document ID\n   * @returns document ID. See {@link DocumentOptions}\n   */\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  /** Set Document Type\n   * @param documentType - document type\n   * @returns document builder with document based on type provided. See {@link DocumentBuilder}\n   */\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  /** Get Document Type\n   * @returns document type. See {@link DocumentOptions}\n   */\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  /** Set Document Template\n   * @param templateId - document template ID\n   * @param parameters - document template parameters\n   * @returns document builder with document based on template provided. See {@link DocumentBuilder}\n   */\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  /** Get Document Template\n   * @returns document template. See {@link DocumentOptions}\n   */\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  /** Get Document's initial value Template parameters\n   * @returns document template parameters. See {@link DocumentOptions}\n   */\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  /** Set Document views\n   * @param views - document views. See {@link ViewBuilder} and {@link View}\n   * @returns document builder with document based on views provided. See {@link DocumentBuilder}\n   */\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  /** Get Document views\n   * @returns document views. See {@link ViewBuilder} and {@link View}\n   */\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  /** Serialize Document builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document node based on path, index and hint provided in options. See {@link DocumentNode}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path)\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  /** Clone Document builder\n   * @param withSpec - partial document node specification used to extend the cloned builder. See {@link PartialDocumentNode}\n   * @returns document builder based on context and spec provided. See {@link DocumentBuilder}\n   */\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters\n  )\n}\n", "export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n", "import {PartialDocumentList, getTypeNamesFromFilter} from './DocumentList'\nimport {StructureNode} from './StructureNodes'\n\n/**\n * Intent parameters (json)\n *\n * @public\n */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * Interface for base intent parameters\n *\n * @public */\nexport interface BaseIntentParams {\n  /* Intent type */\n  type?: string\n  /* Intent Id */\n  id?: string\n  /* Intent template */\n  template?: string\n  /**\n   * Experimental field path\n   * @beta\n   * @experimental\n   * @hidden\n   */\n  path?: string\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/**\n * Intent parameters\n * See {@link BaseIntentParams} and {@link IntentJsonParams}\n *\n * @public\n */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * Interface for intents\n * @public */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  /** Intent type */\n  type: string\n  /** Intent parameters. See {@link IntentParams}\n   */\n  params?: IntentParams\n}\n\n/**\n * Interface for intent checker\n *\n * @public\n */\nexport interface IntentChecker {\n  (\n    /** Intent name */\n    intentName: string,\n    /** Intent checker parameter */\n    params: {[key: string]: any},\n    /** Structure context. See {@link StructureNode} */\n    context: {pane: StructureNode; index: number}\n  ): boolean\n  /** intent checker identify */\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n", "import {pickBy} from 'lodash'\nimport {ComposeIcon} from '@sanity/icons'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {Serializable, SerializeOptions, SerializePath} from './StructureNodes'\nimport {MenuItemBuilder, MenuItem} from './MenuItem'\nimport {IntentParams} from './Intent'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\n/**\n * A `InitialValueTemplateItemBuilder` is used to build a document node with an initial value set.\n *\n * @public\n */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  /** Initial Value template item option object. See {@link InitialValueTemplateItem} */\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: Partial<InitialValueTemplateItem>\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set initial value template item builder ID\n   * @param id - initial value template item ID\n   * @returns initial value template item based on ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  /** Get initial value template item builder ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  /** Set initial value template item title\n   * @param title - initial value template item title\n   * @returns initial value template item based on title provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  /** Get initial value template item title\n   * @returns initial value template item title. See {@link InitialValueTemplateItem}\n   */\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  /** Set initial value template item description\n   * @param description - initial value template item description\n   * @returns initial value template item builder based on description provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  /** Get initial value template item description\n   * @returns initial value template item description. See {@link InitialValueTemplateItem}\n   */\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  /** Set initial value template ID\n   * @param templateId - initial value template item template ID\n   * @returns initial value template item based builder on template ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  /** Get initial value template item template ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  /** Get initial value template item template parameters\n   * @param parameters - initial value template item parameters\n   * @returns initial value template item builder based on parameters provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  /** Get initial value template item template parameters\n   * @returns initial value template item parameters. See {@link InitialValueTemplateItem}\n   */\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  /** Serialize initial value template item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns initial value template item object based on the path, index and hint provided in options. See {@link InitialValueTemplateItem}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - initial value template item builder options. See {@link InitialValueTemplateItemBuilder}\n   * @returns initial value template item builder based on the context and options provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[]\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create new'\n    const params = pickBy(\n      {type: template && template.schemaType, template: item.templateId},\n      Boolean\n    )\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    return new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || ComposeIcon)\n      .intent({type: 'create', params: intentParams})\n      .serialize()\n  })\n}\n", "import {Child, Serializable, SerializeOptions, StructureNode} from './StructureNodes'\nimport {layoutOptions} from './Layout'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {IntentChecker, defaultIntentChecker} from './Intent'\nimport {SerializeError} from './SerializeError'\nimport {\n  InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {validateId} from './util/validateId'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {PreviewLayoutKey, InitialValueTemplateItem} from 'sanity'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/**\n * Interface for list display options\n *\n * @public */\nexport interface ListDisplayOptions {\n  /** Check if list display should show icons */\n  showIcons?: boolean\n}\n\n/**\n * Interface for base generic list\n *\n * @public\n */\nexport interface BaseGenericList extends StructureNode {\n  /** List layout key. See {@link PreviewLayoutKey} */\n  defaultLayout?: PreviewLayoutKey\n  /** Can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** List display options. See {@link ListDisplayOptions} */\n  displayOptions?: ListDisplayOptions\n  /** List child. See {@link Child} */\n  child: Child\n  /** List initial values array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/**\n * Interface for generic list\n *\n * @public\n */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  /** List type */\n  type: string\n  /** List menu items array. See {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** List menu item groups array. See {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n}\n\n/**\n * Interface for buildable generic list\n *\n * @public\n */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  /** List menu items array. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** List menu items groups array. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for generic list input\n * Allows builders and only requires things not inferrable\n *\n * @public */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  /** Input id */\n  id: string\n  /** Input title */\n  title: string\n  /** Input menu items groups. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Input menu items groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  /** Input initial value array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  /** Input default layout. See {@link PreviewLayoutKey} */\n  defaultLayout?: PreviewLayoutKey\n  /** If input can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** Input child of type {@link Child} */\n  child?: Child\n}\n\n/**\n * Class for building generic lists\n *\n * @public\n */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  /** Check if initial value templates are set */\n  protected initialValueTemplatesSpecified = false\n  /** Generic list option object */\n  protected spec: TList = {} as TList\n\n  /** Set generic list ID\n   * @param id - generic list ID\n   * @returns generic list builder based on ID provided. See {@link ConcreteImpl}\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  /** Get generic list ID\n   * @returns generic list ID\n   */\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic list title\n   * @param title - generic list title\n   * @returns generic list builder based on title and ID provided. See {@link ConcreteImpl}\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get generic list title\n   * @returns generic list title\n   */\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  /** Set generic list layout\n   * @param defaultLayout - generic list layout key. See {@link PreviewLayoutKey}\n   * @returns generic list builder based on layout provided. See {@link ConcreteImpl}\n   */\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  /** Get generic list layout\n   * @returns generic list layout\n   */\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  /** Set generic list menu items\n   * @param menuItems - generic list menu items. See {@link MenuItem} and {@link MenuItemBuilder}\n   * @returns generic list builder based on menu items provided. See {@link ConcreteImpl}\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  /** Get generic list menu items\n   * @returns generic list menu items\n   */\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set generic list menu item groups\n   * @param menuItemGroups - generic list menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder}\n   * @returns generic list builder based on menu item groups provided. See {@link ConcreteImpl}\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get generic list menu item groups\n   * @returns generic list menu item groups\n   */\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Set generic list child\n   * @param child - generic list child. See {@link Child}\n   * @returns generic list builder based on child provided (clone). See {@link ConcreteImpl}\n   */\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  /** Get generic list child\n   * @returns generic list child\n   */\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  /** Set generic list can handle intent\n   * @param canHandleIntent - generic list intent checker. See {@link IntentChecker}\n   * @returns generic list builder based on can handle intent provided. See {@link ConcreteImpl}\n   */\n  canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  /** Get generic list can handle intent\n   * @returns generic list can handle intent\n   */\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  /** Set generic list display options\n   * @param enabled - allow / disallow for showing icons\n   * @returns generic list builder based on display options (showIcons) provided. See {@link ConcreteImpl}\n   */\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  /** Get generic list display options\n   * @returns generic list display options (specifically showIcons)\n   */\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  /** Set generic list initial value templates\n   * @param templates - generic list initial value templates. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder}\n   * @returns generic list builder based on templates provided. See {@link ConcreteImpl}\n   */\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  /** Get generic list initial value templates\n   * @returns generic list initial value templates\n   */\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  /** Serialize generic list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic list object based on path provided in options. See {@link GenericList}\n   */\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path)\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path)\n      ),\n    }\n  }\n\n  /** Clone generic list builder (allows for options overriding)\n   * @param _withSpec - generic list options.\n   * @returns generic list builder. See {@link ConcreteImpl}\n   */\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n", "import {SchemaType, SortOrderingItem} from '@sanity/types'\nimport {ComposeIcon} from '@sanity/icons'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {SerializeOptions, Child} from './StructureNodes'\nimport {ChildResolver, ChildResolverOptions, ItemChild} from './ChildResolver'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n} from './GenericList'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType('')\n    )\n  }\n\n/**\n * Partial document list\n *\n * @public\n */\nexport interface PartialDocumentList extends BuildableGenericList {\n  /** Document list options. See {@link DocumentListOptions} */\n  options?: DocumentListOptions\n  /** Schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document list input\n *\n * @public\n */\nexport interface DocumentListInput extends GenericListInput {\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n}\n\n/**\n * Interface for document list\n *\n * @public\n */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n  /** Document list child. See {@link Child} */\n  child: Child\n  /** Document schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document List options\n *\n * @public\n */\nexport interface DocumentListOptions {\n  /** Document list filter */\n  filter: string\n  /** Document list parameters */\n  params?: Record<string, unknown>\n  /** Document list API version */\n  apiVersion?: string\n  /** Document list API default ordering array. See {@link SortOrderingItem} */\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/**\n * Class for building document list\n *\n * @public\n */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput\n  ) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  /** Set API version\n   * @param apiVersion - API version\n   * @returns document list builder based on the options and API version provided. See {@link DocumentListBuilder}\n   */\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  /** Get API version\n   * @returns API version\n   */\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  /** Set Document list filter\n   * @param filter - filter\n   * @returns document list builder based on the options and filter provided. See {@link DocumentListBuilder}\n   */\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  /** Get Document list filter\n   * @returns filter\n   */\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  /** Set Document list schema type name\n   * @param type - schema type name. See {@link SchemaType}\n   * @returns document list builder based on the schema type name provided. See {@link DocumentListBuilder}\n   */\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  /** Get Document list schema type name\n   * @returns schema type name\n   */\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  /** Set Document list options' parameters\n   * @param params - parameters\n   * @returns document list builder based on the options provided. See {@link DocumentListBuilder}\n   */\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  /** Get Document list options' parameters\n   * @returns options\n   */\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  /** Set Document list default ordering\n   * @param ordering - default sort ordering array. See {@link SortOrderingItem}\n   * @returns document list builder based on ordering provided. See {@link DocumentListBuilder}\n   */\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  /** Get Document list default ordering\n   * @returns default ordering. See {@link SortOrderingItem}\n   */\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  /** Serialize Document list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list object based on path provided in options. See {@link DocumentList}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        apiVersion:\n          this.spec.options.apiVersion ||\n          // If this is a simple type filter, use modern API version - otherwise default to v1\n          (this.spec.options?.filter === '_type == $type' ? '2021-06-07' : '1'),\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  /** Clone Document list builder (allows for options overriding)\n   * @param withSpec - override document list spec. See {@link PartialDocumentList}\n   * @returns document list builder. See {@link DocumentListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  /** Get Document list spec\n   * @returns document list spec. See {@link PartialDocumentList}\n   */\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      })\n    )\n    .map((option) => ({...option, icon: ComposeIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n", "import {find} from 'lodash'\nimport {SerializePath, SerializeOptions, Divider} from './StructureNodes'\nimport {ChildResolverOptions, ChildResolver} from './ChildResolver'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListItem, ListItemBuilder} from './ListItem'\nimport {IntentChecker} from './Intent'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/**\n * Interface for List\n *\n * @public\n */\nexport interface List extends GenericList {\n  type: 'list'\n  /** List items. See {@link ListItem} and {@link Divider} */\n  items: (ListItem | Divider)[]\n}\n\n/**\n * Interface for list input\n *\n * @public\n */\nexport interface ListInput extends GenericListInput {\n  /** List input items array. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * Interface for buildable list\n *\n * @public\n */\nexport interface BuildableList extends BuildableGenericList {\n  /** List items. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * A `ListBuilder` is used to build a list of items in the desk tool.\n *\n * @public */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  /** buildable list option object. See {@link BuildableList} */\n  protected spec: BuildableList\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListInput\n  ) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  /**\n   * Set list builder based on items provided\n   * @param items - list items. See {@link ListItemBuilder}, {@link ListItem} and {@link Divider}\n   * @returns list builder based on items provided. See {@link ListBuilder}\n   */\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  /** Get list builder items\n   * @returns list items. See {@link BuildableList}\n   */\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  /** Serialize list builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns list based on path in options. See {@link List}\n   */\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  /**\n   * Clone list builder and return new list builder based on context and spec provided\n   * @param withSpec - list options. See {@link BuildableList}\n   * @returns new list builder based on context and spec provided. See {@link ListBuilder}\n   */\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {SchemaType} from '@sanity/types'\nimport {Observable} from 'rxjs'\nimport {SerializeOptions, Serializable, Collection, CollectionBuilder} from './StructureNodes'\nimport {ChildResolver, ItemChild} from './ChildResolver'\nimport {DocumentListBuilder} from './DocumentList'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListBuilder} from './List'\nimport {DocumentBuilder} from './Document'\nimport {ComponentBuilder} from './Component'\nimport {validateId} from './util/validateId'\nimport {StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * Unserialized list item child.\n * See {@link Collection}, {@link CollectionBuilder}, {@link ChildResolver} and {@link ItemChild}\n *\n * @public\n */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/**\n * Child of List Item\n * See {@link Collection}, {@link ChildResolver}, {@link ItemChild}\n * @public\n */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/**\n * Interface for serialize list item options\n *\n * @public\n */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  /** Check if list item title is optional */\n  titleIsOptional?: boolean\n}\n\n/**\n * Interface for ist item display options\n *\n * @public */\nexport interface ListItemDisplayOptions {\n  /** Check if list item display should show icon */\n  showIcon?: boolean\n}\n\n/**\n * interface for list item input\n *\n * @public */\nexport interface ListItemInput {\n  /** List item id */\n  id: string\n  /** List item title */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Interface for List Item\n *\n * @public */\nexport interface ListItem {\n  /** List item id */\n  id: string\n  /** List item type */\n  type: string\n  /** List item title */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType\n}\n\n/**\n * Interface for unserialized list items.\n *\n * @public\n */\nexport interface UnserializedListItem {\n  /** List item ID */\n  id: string\n  /** List item title */\n  title: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link UnserializedListItemChild} */\n  child?: UnserializedListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Partial list item. See {@link UnserializedListItem}\n *\n * @public */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/**\n * Class for building list items\n *\n * @public */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  /** List item option object. See {@link PartialListItem} */\n  protected spec: PartialListItem\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListItemInput\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set list item ID\n   * @returns list item builder based on ID provided. See {@link ListItemBuilder}\n   */\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  /**\n   * Get list item ID\n   * @returns list item ID. See {@link PartialListItem}\n   */\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  /**\n   * Set list item title\n   * @returns list item builder based on title provided. See {@link ListItemBuilder}\n   */\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /**\n   * Get list item title\n   * @returns list item title. See {@link PartialListItem}\n   */\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  /**\n   * Set list item icon\n   * @returns list item builder based on icon provided. See {@link ListItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Set if list item should show icon\n   * @returns list item builder based on showIcon provided. See {@link ListItemBuilder}\n   */\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  /**\n   * Check if list item should show icon\n   * @returns true if it should show the icon, false if not, undefined if not set\n   */\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  /**\n   *Get list item icon\n   * @returns list item icon. See {@link PartialListItem}\n   */\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set list item child\n   * @param child - list item child. See {@link UnserializedListItemChild}\n   * @returns list item builder based on child provided. See {@link ListItemBuilder}\n   */\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  /**\n   * Get list item child\n   * @returns list item child. See {@link PartialListItem}\n   */\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  /**\n   * Set list item schema type\n   * @param schemaType - list item schema type. See {@link SchemaType}\n   * @returns list item builder based on schema type provided. See {@link ListItemBuilder}\n   */\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  /**\n   * Get list item schema type\n   * @returns list item schema type. See {@link PartialListItem}\n   */\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  /** Serialize list item builder\n   * @param options - serialization options. See {@link ListItemSerializeOptions}\n   * @returns list item node based on path provided in options. See {@link ListItem}\n   */\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  /** Clone list item builder\n   * @param withSpec - partial list item options. See {@link PartialListItem}\n   * @returns list item builder based on context and spec provided. See {@link ListItemBuilder}\n   */\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {SchemaType} from '@sanity/types'\nimport {SerializeOptions} from './StructureNodes'\nimport {ListItemBuilder, ListItem, UnserializedListItem, ListItemInput} from './ListItem'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\n/**\n * Interface for document list item input\n *\n * @public\n */\nexport interface DocumentListItemInput extends ListItemInput {\n  /** Document list item input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Interface for document list item\n *\n * @public\n */\nexport interface DocumentListItem extends ListItem {\n  /** Document schema type. See {@link SchemaType} */\n  schemaType: SchemaType\n  /** Document ID */\n  _id: string\n}\n\n/**\n * Partial document list item\n *\n * @public\n */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/**\n * Class for building a document list item\n *\n * @public\n */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  /** Document list options. See {@link PartialDocumentListItem} */\n  protected spec: PartialDocumentListItem\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListItemInput\n  ) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Serialize document list item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list item object based on path provided in options. See {@link DocumentListItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  /** Clone Document list item builder (allows for options overriding)\n   * @param withSpec - Document list item builder options. See {@link PartialDocumentListItem}\n   * @returns document list item builder. See {@link DocumentListItemBuilder}\n   */\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n", "import {SchemaType} from '@sanity/types'\nimport {DocumentListBuilder, DocumentListInput, PartialDocumentList} from './DocumentList'\nimport {Child} from './StructureNodes'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {GenericListInput} from './GenericList'\nimport {StructureContext} from './types'\n\n/**\n * Interface for document type list input\n *\n * @public\n */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  /** Document type list input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Class for building a document type list\n *\n * @public\n */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput\n  ) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set Document type list child\n   * @param child - Child component. See {@link Child}\n   * @returns document type list builder based on child component provided without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  /** Clone Document type list builder (allows for options overriding)\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder. See {@link DocumentTypeListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  /** Clone Document type list builder (allows for options overriding) and remove default intent handler\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n", "import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n", "import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\nimport {Source, getConfigContextFromSource, getPublishedId} from 'sanity'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n", "import React, {useMemo, useState} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {createStructureBuilder, DefaultDocumentNodeResolver} from './structureBuilder'\nimport {DeskToolContextValue, StructureResolver, UnresolvedPaneNode} from './types'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\n/** @internal */\nexport interface DeskToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function DeskToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: DeskToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  const features: DeskToolContextValue['features'] = useMemo(\n    () => ({\n      backButton: layoutCollapsed,\n      resizablePanes: !layoutCollapsed,\n      reviewChanges: !layoutCollapsed,\n      splitPanes: !layoutCollapsed,\n      splitViews: !layoutCollapsed,\n    }),\n    [layoutCollapsed]\n  )\n\n  const deskTool: DeskToolContextValue = useMemo(() => {\n    return {\n      features,\n      layoutCollapsed,\n      setLayoutCollapsed,\n      rootPaneNode,\n      structureContext: S.context,\n    }\n  }, [features, layoutCollapsed, rootPaneNode, S.context])\n\n  return <DeskToolContext.Provider value={deskTool}>{children}</DeskToolContext.Provider>\n}\n"],
  "mappings": "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",
  "names": ["isNumber", "camelCase", "kebabCase", "format", "err", "obj", "_setPrototypeOf", "o", "p", "_getPrototypeOf", "CopyToClipboard", "require_lib", "CopyToClipboard", "Delay", "_ref", "children", "ms", "ready", "setReady", "useState", "useEffect", "timeoutId", "setTimeout", "clearTimeout", "jsx", "Fragment", "DocTitle", "props", "document", "documentValue", "schema", "useSchema", "schemaType", "get", "_type", "error", "value", "useValuePreview", "jsxs", "message", "title", "style", "color", "TimeAgo", "_ref2", "time", "timeAgo", "useTimeAgo", "isClientError", "e", "POLL_INTERVAL", "visiblePoll$", "getVisiblePoll$", "fromEvent", "pipe", "startWith", "map", "visibilityState", "distinctUntilChanged", "switchMap", "visible", "timer", "EMPTY", "shareReplay", "refCount", "bufferSize", "getDocumentExistence", "documentId", "_ref3", "versionedClient", "draftId", "getDraftId", "publishedId", "getPublishedId", "requestOptions", "uri", "getDataUrl", "concat", "json", "query", "excludeContent", "tag", "observable", "request", "_ref4", "omitted", "nonExistant", "filter", "doc", "reason", "length", "some", "id", "fetchCrossDatasetReferences", "context", "checkDocumentId", "of", "totalCount", "references", "currentDataset", "config", "dataset", "url", "catchError", "statusCode", "useInternalReferences", "createHookFromObservableFactory", "_ref5", "documentStore", "referencesClause", "totalClause", "fetchQuery", "listenQuery", "fetch", "listen", "transitions", "throttleTime", "useCrossDatasetReferences", "_ref6", "useReferringDocuments", "useClient", "DEFAULT_STUDIO_CLIENT_OPTIONS", "useDocumentStore", "internalReferences", "isInternalReferencesLoading", "useMemo", "crossDatasetReferences", "isCrossDatasetReferencesLoading", "projectIds", "Array", "from", "Set", "crossDatasetReference", "projectId", "Boolean", "sort", "datasetNames", "datasetName", "hasUnknownDatasetNames", "isLoading", "PublishedStatus", "updatedAt", "_updatedAt", "Tooltip", "portal", "content", "Box", "padding", "Text", "size", "TextWithTone", "tone", "dimmed", "muted", "PublishIcon", "DraftStatus", "EditIcon", "PaneItemPreview", "icon", "layout", "presence", "isRecord", "isValidElement", "isString", "isNumber", "draft", "published", "useMemoObservable", "getPreviewStateObservable", "documentPreviewStore", "_id", "status", "Inline", "space", "DocumentPreviewPresence", "SanityDefaultPreview", "getPreviewValueWithFallback", "isPlaceholder", "missingContext", "Error", "PaneRouterContext", "createContext", "index", "groupIndex", "siblingIndex", "payload", "params", "hasGroupSiblings", "groupLength", "routerPanesState", "BackLink", "ChildLink", "ReferenceChildLink", "handleEditReference", "ParameterizedLink", "replaceCurrent", "closeCurrent", "duplicateCurrent", "setView", "setParams", "setPayload", "navigateIntent", "forwardRef", "ref", "useContext", "panes", "slice", "state", "StateLink", "childId", "childPayload", "childParameters", "rest", "documentType", "parentRefPath", "template", "type", "pathToString", "currentPanes", "nextParams", "useUnique", "nextPayload", "nextState", "currentGroup", "currentSibling", "nextSibling", "nextGroup", "nextPanes", "usePaneRouter", "EMPTY_ARRAY", "ReferencePreviewLink", "onClick", "documentPresence", "useDocumentPresence", "useDocumentPreviewStore", "Link", "useCallback", "LinkComponent", "linkProps", "name", "PreviewCard", "__unstable_focusRing", "as", "radius", "ChevronWrapper", "styled", "_templateObject", "_taggedTemplateLiteral", "CrossDatasetReferencesDetails", "details", "_templateObject2", "CrossDatasetReferencesSummary", "summary", "_templateObject3", "TableContainer", "attrs", "paddingX", "paddingBottom", "_templateObject4", "Table", "table", "_templateObject5", "_ref8", "theme", "rem", "sanity", "_ref9", "_ref10", "DocumentIdFlex", "Flex", "_templateObject6", "ReferencesCard", "Card", "shadow", "marginBottom", "flex", "_templateObject7", "OtherReferenceCount", "difference", "placement", "Container", "width", "InfoOutlineIcon", "ConfirmDeleteDialogBody", "_ref11", "documentTitle", "action", "onReferenceLinkClick", "toast", "useToast", "renderPreviewItem", "item", "UnknownIcon", "subtitle", "documentCount", "toLocaleString", "normalizedDatasetNames", "datasetsCount", "datasetNameList", "join", "WarningOutlineIcon", "marginLeft", "direction", "height", "Stack", "overflow", "borderTop", "align", "marginRight", "DocumentsIcon", "textOverflow", "ChevronDownIcon", "Label", "reference", "_ref12", "gap", "justify", "CopyToClipboard", "text", "onCopy", "push", "Button", "mode", "ClipboardIcon", "fontSize", "DialogBody", "_templateObject8", "LoadingContainer", "_templateObject9", "ConfirmDeleteDialog", "_ref13", "onCancel", "onConfirm", "dialogId", "useId", "capitalizedAction", "substring", "toUpperCase", "showConfirmButton", "Dialog", "header", "footer", "Grid", "columns", "paddingY", "onClose", "onClickOutside", "Spinner", "marginTop", "ConfirmDeleteDialogContainer", "setError", "handleRetry", "ErrorBoundary", "onCatch", "MENU_GROUP_POPOVER_PROPS", "constrainSize", "PaneMenuButtonItem", "disabled", "isAfterGroup", "node", "MenuDivider", "expanded", "child", "childIndex", "_a", "key", "MenuGroup", "popover", "PaneContextMenuItemResolver", "intent", "PaneContextIntentMenuItem", "PaneContextMenuItem", "tooltipContent", "TooltipOfDisabled", "MenuItem", "hotkeys", "hotkey", "split", "iconRight", "selected", "CheckmarkIcon", "onAction", "pressed", "intentLink", "useIntentLink", "handleClick", "event", "href", "CONTEXT_MENU_POPOVER_PROPS", "nodesHasTone", "nodes", "PaneContextMenuButton", "hasCritical", "hasCaution", "MenuButton", "button", "StatusButton", "EllipsisVerticalIcon", "menu", "Menu", "nodeIndex", "PANE_DEBUG", "PANE_COLLAPSED_WIDTH", "PANE_DEFAULT_MIN_WIDTH", "PaneContext", "PaneLayoutContext", "usePaneLayout", "pane", "Root", "Layer", "_templateObject10", "PaneDivider", "_ref14", "element", "resize", "dragging", "setDragging", "handleMouseDown", "preventDefault", "startX", "pageX", "handleMouseMove", "deltaX", "handleMouseUp", "window", "removeEventListener", "addEventListener", "onMouseDown", "_templateObject11", "Pane", "_b", "_c", "currentMinWidth", "currentMinWidthProp", "currentMaxWidth", "currentMaxWidthProp", "flexProp", "minWidth", "minWidthProp", "maxWidth", "maxWidthProp", "restProps", "rootElement", "setRootElement", "collapse", "collapsed", "layoutCollapsed", "expand", "expandedElement", "mount", "find", "p", "paneIndex", "indexOf", "nextPane", "isLast", "nextCollapsed", "forwardedRef", "useForwardedRef", "setRef", "refValue", "current", "handleCollapse", "handleExpand", "contextValue", "hidden", "divider", "LegacyLayerProvider", "zOffset", "Infinity", "Provider", "BoundaryElementProvider", "usePane", "_templateObject12", "displayName", "PaneContent", "forwardedAs", "_templateObject13", "RootCard", "_templateObject14", "PaneFooter", "_templateObject15", "Layout", "_templateObject16", "TitleCard", "_ref15", "fg", "bg", "card", "enabled", "css", "_templateObject17", "TitleTextSkeleton", "TextSkeleton", "_templateObject18", "TitleText", "_templateObject19", "TabsBox", "_ref16", "_templateObject20", "rgba", "base", "PaneHeader", "actions", "backButton", "contentAfter", "loading", "subActions", "tabs", "tabIndex", "paneElement", "paneRect", "useElementRect", "layoutStyle", "innerHeight", "handleTitleClick", "handleLayoutClick", "showTabsOrSubActions", "LayerProvider", "sizing", "paddingLeft", "animated", "weight", "paddingTop", "PaneHeaderActionButton", "PaneHeaderMenuItemActionButton", "PaneHeaderMenuGroupActionButton", "console", "warn", "PaneHeaderActionIntentButton", "disabledTooltipContent", "label", "idx", "_templateObject21", "isMenuNodeButton", "renderAsButton", "isNotMenuNodeButton", "negate", "resolveMenuNodes", "fieldActions", "menuItems", "menuItemGroups", "keyOffset", "i", "a", "mapFieldActionToPaneMenuNode", "groups", "itemGroup", "group", "g", "ungroupedItems", "shortcut", "actionHandler", "showAsAction", "childIdx", "IntentButton", "linkRef", "IntentLink", "role", "InsufficientPermissionsMessageTooltip", "_ref17", "reveal", "currentUser", "useCurrentUser", "InsufficientPermissionsMessage", "POPOVER_PROPS", "getIntent", "templates", "typeName", "t", "templateId", "baseParams", "initialDocumentId", "parameters", "PaneHeaderCreateButton", "_ref18", "templateItems", "useTemplates", "templatePermissions", "isTemplatePermissionsLoading", "useTemplatePermissions", "nothingGranted", "every", "permission", "granted", "permissionsById", "reduce", "acc", "ComposeIcon", "firstItem", "permissions", "itemIndex", "isNonNullable", "hashObject", "sortObject", "v", "isArray", "Object", "entries", "_ref19", "_ref20", "keyA", "keyB", "localeCompare", "normalize", "JSON", "parse", "stringify", "PaneHeaderActions", "memo", "initialValueTemplateItems", "initialValueTemplateItemsFromStructure", "actionHandlers", "EMPTY_OBJECT", "handleAction", "handler", "menuNodes", "actionNodes", "contextMenuNodes", "initialValueTemplateItemFromMenuItems", "menuItemIndex", "intentParams", "templateParams", "_ref21", "initialValueTemplateItem", "description", "combinedInitialValueTemplates", "uniqBy", "DISABLED_REASON_TITLE", "NOTHING_TO_DELETE", "DeleteAction", "_ref22", "onComplete", "delete", "deleteOp", "useDocumentOperation", "isDeleting", "setIsDeleting", "isConfirmDialogOpen", "setConfirmDialogOpen", "handleCancel", "handleConfirm", "execute", "handle", "isPermissionsLoading", "useDocumentPairPermissions", "TrashIcon", "operationLabel", "onHandle", "dialog", "component", "NO_CHANGES", "NOT_PUBLISHED", "DiscardChangesAction", "_ref23", "liveEdit", "discardChanges", "ResetIcon", "NOTHING_TO_DUPLICATE", "DuplicateAction", "_ref24", "duplicate", "useRouter", "isDuplicating", "setDuplicating", "dupeId", "uuid", "CopyIcon", "HistoryRestoreAction", "_ref25", "revision", "restore", "isRevisionInitialVersion", "isRevisionLatestVersion", "RestoreIcon", "DocumentPaneContext", "useDocumentPane", "documentPane", "LIVE_EDIT_ENABLED", "ALREADY_PUBLISHED", "NOT_READY", "getDisabledReason", "publishedAt", "PublishAction", "publishState", "setPublishState", "publish", "validationStatus", "useValidationStatus", "syncState", "useSyncState", "changesOpen", "onHistoryOpen", "editState", "useEditState", "_rev", "hasValidationErrors", "validation", "isValidationErrorMarker", "publishScheduled", "setPublishScheduled", "isSyncing", "isValidating", "hasDraft", "doPublish", "validationComplete", "didPublish", "delay", "transactionSyncLock", "UnpublishAction", "_ref26", "unpublish", "UnpublishIcon", "LiveEditBadge", "_DEBUG", "EMPTY_PARAMS", "LOADING_PANE", "Symbol", "DOCUMENT_PANEL_PORTAL_ELEMENT", "activePanes", "setActivePanes", "getIntentState", "routerState", "editDocumentId", "isTemplate", "canHandleIntent", "call", "schemaTypeName", "options", "paneParams", "legacyEditParamsToState", "decodeURIComponent", "err", "encodePanesSegment", "encodeChunks", "encodeURIComponent", "legacyEditParamsToPath", "toState", "pathSegment", "parsePanesSegment", "toPath", "router", "route", "create", "intents", "path", "transform", "panePattern", "isParam", "str", "test", "isPayload", "exclusiveParams", "isTruthy", "parseChunks", "chunks", "initial", "chunk", "tryParseBase64Payload", "firstSibling", "paneIsFirstSibling", "sameAsFirst", "encodedPayload", "btoa", "encodedParams", "entry", "valueFromFirstSibling", "includes", "_ref27", "flat", "parseOldPanesSegment", "restOfSiblings", "segment", "sibling", "omit", "buffer", "match", "payloadChunk", "tryParsePayload", "data", "atob", "DOCUMENT_PANEL_MIN_WIDTH", "DOCUMENT_PANEL_INITIAL_MIN_WIDTH", "DOCUMENT_INSPECTOR_MIN_WIDTH", "DOCUMENT_INSPECTOR_MAX_WIDTH", "INSPECT_ACTION_PREFIX", "DEFAULT_MENU_ITEM_GROUPS", "HISTORY_INSPECTOR_NAME", "VALIDATION_INSPECTOR_NAME", "position", "zIndex", "lineHeight", "display", "left", "bottom", "right", "borderBottom", "opacity", "DocumentInspectorHeader", "closeButtonLabel", "CloseIcon", "DeskToolContext", "useDeskTool", "deskTool", "div", "_templateObject22", "Resizer", "onResize", "onResizeStart", "mouseXRef", "useRef", "_templateObject23", "Resizable", "setElement", "elementWidthRef", "targetWidth", "setTargetWidth", "handleResizeStart", "offsetWidth", "handleResize", "w", "Math", "min", "max", "getPathTypes", "result", "s", "jsonType", "field", "fields", "f", "itemType", "ofType", "_key", "values", "MARKER_ICON", "ErrorOutlineIcon", "warning", "info", "MARKER_TONE", "ValidationInspector", "onFocus", "onPathOpen", "handleOpen", "marker", "ValidationCard", "onOpen", "errorInfo", "setErrorInfo", "level", "createElement", "DocumentNodePathBreadcrumbs", "pathTypes", "fontWeight", "useMenuItem", "validationMarkers", "hasErrors", "isValidationError", "hasWarnings", "isValidationWarning", "CheckmarkCircleIcon", "validationInspector", "TIMELINE_LABELS", "discardDraft", "editDraft", "editLive", "TIMELINE_ICON_COMPONENTS", "AddCircleIcon", "formatTimelineEventLabel", "getTimelineEventIconComponent", "UserAvatarStack", "_ref28", "maxLength", "userIds", "AvatarStack", "userId", "UserAvatar", "user", "withTooltip", "IconWrapper", "_ref29", "borderColor", "skeleton", "_templateObject24", "_ref30", "$selected", "_templateObject25", "_templateObject26", "IconBox", "_templateObject27", "EventLabel", "_templateObject28", "TimestampBox", "_templateObject29", "_ref31", "TIMELINE_ITEM_EVENT_TONE", "withinSelection", "TimelineItem", "_ref32", "isFirst", "isLatest", "isSelected", "onSelect", "timestamp", "iconComponent", "authorUserIds", "authors", "formattedTimestamp", "parsedDate", "Date", "formattedDate", "format", "evt", "stopPropagation", "margin", "StackWrapper", "_templateObject30", "ListWrapper", "_templateObject31", "_ref33", "$visible", "_templateObject32", "_templateObject33", "Timeline", "_ref34", "disabledBeforeFirstChunk", "hasMoreChunks", "lastChunk", "onLoadMore", "firstChunk", "mounted", "setMounted", "filteredChunks", "c", "selectedIndex", "findIndex", "renderItem", "_ref35", "activeIndex", "endTimestamp", "CommandList", "activeItemDataAttr", "ariaLabel", "autoFocus", "initialIndex", "initialScrollAlign", "itemHeight", "items", "onEndReached", "onEndReachedIndexOffset", "overscan", "wrapAround", "TimelineError", "Popover", "_templateObject34", "TimelineMenu", "_ref36", "setTimelineRange", "setTimelineMode", "timelineError", "timelineStore", "open", "setOpen", "setButton", "setPopover", "useTimelineSelector", "realRevChunk", "sinceTime", "handleClose", "handleClickOutside", "handleGlobalKeyDown", "focus", "useClickOutside", "useGlobalKeyDown", "selectRev", "revChunk", "sinceId", "revId", "findRangeForRev", "closable", "selectSince", "sinceChunk", "findRangeForSince", "handleLoadMore", "loadMore", "timeLabel", "useFormattedTimestamp", "revLabel", "upperFirst", "sinceLabel", "buttonLabel", "SelectIcon", "formatted", "LoadingContent", "collectLatestAuthorAnnotations", "diff", "authorMap", "Map", "visitDiff", "annotation", "author", "previous", "set", "b", "Scroller", "ScrollContainer", "_templateObject35", "ChangesInspector", "scrollRef", "onOlderRevision", "selectionState", "isComparingCurrent", "documentContext", "React", "FieldWrapper", "ChangeFieldWrapper", "rootDiff", "changeAnnotations", "DiffTooltip", "annotations", "_ref37", "Content", "_ref38", "NoChanges", "DocumentChangeContext", "ChangeList", "changesInspector", "features", "reviewChanges", "_ref39", "since", "_ref40", "documentActions", "documentBadges", "definePlugin", "prevActions", "badges", "prevBadges", "badge", "inspectors", "tools", "MasterDetailIcon", "lazy", "getInspectorItems", "_ref41", "currentInspector", "hasValue", "inspectorMenuItems", "inspector", "menuItem", "isDisabled", "getInspectItem", "_ref42", "BinaryDocumentIcon", "getProductionPreviewItem", "_ref43", "previewUrl", "EarthAmericasIcon", "getMenuItems", "inspectorItems", "isSanityDocument", "usePreviewUrl", "setPreviewUrl", "resolveProductionUrl", "useSource", "value$", "useAsObservable", "debounceTime", "subscribe", "next", "getInitialValueTemplateOpts", "opts", "panePayload", "structureNodeTemplate", "templateName", "urlTemplate", "typeTemplates", "InspectorMenuItem", "setMenuItem", "DocumentInspectorMenuItemsResolver", "onMenuItems", "len", "lenRef", "setMenuItems", "menuItemsRef", "newFieldActions", "prev", "inspectorIndex", "DocumentPaneProvider", "paneKey", "unstable_fieldActions", "fieldActionsResolver", "unstable_languageFilter", "languageFilterResolver", "inspectorsResolver", "presenceStore", "usePresenceStore", "paneRouter", "setPaneParams", "pushToast", "views", "viewsProp", "paneOptions", "documentIdRaw", "templateParameters", "initialValueRaw", "useInitialValue", "initialValue", "patch", "validationRaw", "connectionState", "useConnectionState", "setInspectorMenuItems", "languageFilter", "focusPath", "setFocusPath", "pathFromString", "activeViewId", "view", "timelineMode", "setTimelineError", "useTimelineStore", "onError", "rev", "revTime", "sinceAttributes", "timelineDisplayed", "timelineReady", "setPresence", "subscription", "nextPresence", "unsubscribe", "inspectorName", "setInspectorName", "inspect", "inspectParamRef", "resolvedChangesInspector", "inspectOpen", "compareValue", "displayed", "newSince", "newRev", "handleFocus", "nextFocusPath", "setLocation", "lastActiveAt", "toISOString", "handleBlur", "blurredPath", "patchRef", "toMutationPatches", "patches", "handleChange", "closeInspector", "closeInspectorName", "_d", "openInspector", "nextInspectorName", "nextInspector", "currentParams", "closeResult", "handleHistoryClose", "handleHistoryOpen", "handlePaneClose", "handlePaneSplit", "toggleLegacyInspect", "toggle", "arguments", "undefined", "handleMenuAction", "startsWith", "handleKeyUp", "isHotkey", "handleLegacyInspectClose", "openPath", "onSetOpenPath", "fieldGroupState", "onSetFieldGroupState", "collapsedPaths", "onSetCollapsedPath", "collapsedFieldSets", "onSetCollapsedFieldSets", "handleOnSetCollapsedPath", "prevState", "setAtPath", "handleOnSetCollapsedFieldSet", "handleSetActiveFieldGroup", "groupName", "requiredPermission", "_createdAt", "docId", "docPermissionsInput", "useDocumentValuePermissions", "isNonExistent", "readOnly", "hasNoPermission", "updateActionDisabled", "isActionEnabled", "createActionDisabled", "reconnecting", "isLocked", "formState", "useFormState", "comparisonValue", "formStateRef", "setOpenPath", "ops", "getExpandOperations", "forEach", "op", "onBlur", "onChange", "onHistoryClose", "onInspectClose", "onKeyUp", "onMenuAction", "onPaneClose", "onPaneSplit", "onSetActiveFieldGroup", "onSetCollapsedFieldSet", "restParams", "pathFromUrl", "resolveKeyedPath", "rootFieldActionNodes", "setRootFieldActionNodes", "FieldActionsResolver", "onActions", "FieldActionsProvider", "SerializeError", "constructor", "parentPath", "hint", "__publicField", "withHelpUrl", "helpId", "HELP_URL", "IMPLICIT_FIELDS", "joinReferences", "head", "tail", "schemaField", "refTypes", "to", "refType", "tailFields", "tailWrapper", "getExtendedProjection", "orderBy", "ordering", "ORDER_BY_UPDATED_AT", "by", "ORDER_BY_CREATED_AT", "DEFAULT_SELECTED_ORDERING_OPTION", "DEFAULT_ORDERING_OPTIONS", "maybeSerializeMenuItem", "MenuItemBuilder", "serialize", "_context", "spec", "clone", "getAction", "getTitle", "getGroup", "getIcon", "getParams", "getShowAsAction", "TITLE_REQUIRED", "ACTION_OR_INTENT_REQUIRED", "ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE", "withSpec", "builder", "getOrderingMenuItem", "extendedProjection", "SortIcon", "getOrderingMenuItemsForSchemaType", "orderings", "maybeSerializeMenuItemGroup", "MenuItemGroupBuilder", "_title", "getId", "ID_REQUIRED", "disallowedPattern", "validateId", "disallowedChar", "getStructureNodeId", "camelCased", "camelCase", "getSlug", "ComponentBuilder", "getChild", "getComponent", "getOptions", "getMenuItemGroups", "componentOptions", "resolveTypeForDocument", "getClient", "types", "GenericViewBuilder", "kebabCase", "isSerializable", "maybeSerializeView", "isComponentSpec", "ComponentViewBuilder", "componentOrSpec", "userComponent", "COMPONENT_REQUIRED", "FormViewBuilder", "form", "createDocumentChildResolver", "_ref44", "resolveDocumentNode", "itemId", "_ref45", "currentSegment", "DocumentBuilder", "paneId", "getDocumentId", "getSchemaType", "initialValueTemplate", "getInitialValueTemplate", "getInitialValueTemplateParameters", "getViews", "urlId", "DOCUMENT_ID_REQUIRED", "viewIds", "dupes", "uniq", "viewId", "getDocumentOptions", "documentFromEditor", "documentFromEditorWithInitialValue", "_ref46", "layoutOptions", "DEFAULT_INTENT_HANDLER", "defaultIntentChecker", "intentName", "_ref47", "isEdit", "isCreate", "typedSpec", "paneFilter", "typeNames", "getTypeNamesFromFilter", "initialValueTemplates", "tpl", "identity", "InitialValueTemplateItemBuilder", "getDescription", "getTemplateId", "getParameters", "defaultInitialValueTemplateItems", "getStructureBuilder", "getTypeNames", "ordered", "maybeSerializeInitialValueTemplateItem", "menuItemsFromInitialValueTemplateItems", "pickBy", "noChildResolver", "shallowIntentChecker", "_ref48", "GenericListBuilder", "defaultLayout", "getDefaultLayout", "getCanHandleIntent", "showIcons", "displayOptions", "getShowIcons", "initialValueTemplatesSpecified", "getInitialValueTemplates", "validateFilter", "trim", "QUERY_PROVIDED_FOR_FILTER", "createDocumentChildResolverForItem", "parentItem", "parent", "Promise", "resolve", "then", "DocumentListBuilder", "apiVersion", "getApiVersion", "getFilter", "defaultOrdering", "getDefaultOrdering", "FILTER_REQUIRED", "inferInitialValueTemplates", "inferTypeName", "getSpec", "flatMap", "resolveNewDocumentOptions", "option", "getTypeNamesFromEqualityFilter", "getTypeNamesFromInTypesFilter", "pattern", "matches", "exec", "candidate", "normalized", "replace", "getArgType", "thing", "ListBuilder", "isPromise", "isListItem", "defaultCanHandleIntent", "isDocumentListItem", "resolveChildForItem", "target", "maybeSerializeListItem", "ListItemBuilder", "listItem", "gotWhat", "helpText", "INVALID_LIST_ITEM", "getItems", "LIST_ITEMS_MUST_BE_ARRAY", "serializedItems", "val", "dupeIds", "dupeDesc", "LIST_ITEM_IDS_MUST_BE_UNIQUE", "showIcon", "getShowIcon", "titleIsOptional", "SCHEMA_TYPE_NOT_FOUND", "serializeOptions", "listChild", "originalChild", "childOptions", "createDefaultChildResolver", "DocumentListItemBuilder", "SCHEMA_TYPE_REQUIRED", "DocumentTypeListBuilder", "cloneWithoutDefaultIntentHandler", "shouldOverride", "override", "shouldShowIcon", "preview", "prepare", "select", "media", "BUNDLED_DOC_TYPES", "isBundledDocType", "isDocumentType", "isList", "collection", "getDocumentTypes", "_ref49", "n", "getDocumentTypeListItems", "getDocumentTypeListItem", "startCase", "childContext", "list", "getDocumentTypeList", "typeNameOrSpec", "StackCompactIcon", "StackIcon", "hasIcon", "getDefaultStructure", "createStructureBuilder", "_ref50", "defaultDocumentNode", "source", "configContext", "getConfigContextFromSource", "structureBuilder", "defaults", "documentTypeList", "_len", "args", "documentTypeListItem", "_len2", "_key2", "documentTypeListItems", "_len3", "_key3", "_len4", "_key4", "documentWithInitialValueTemplate", "_len5", "_key5", "defaultDocument", "_len6", "_key6", "_len7", "_key7", "_len8", "_key8", "menuItemGroup", "_len9", "_key9", "_len10", "_key10", "documentList", "_len11", "_key11", "documentListItem", "_len12", "_key12", "orderingMenuItem", "_len13", "_key13", "orderingMenuItemsForType", "_len14", "_key14", "editor", "_len15", "_key15", "_len16", "_key16", "isValidElementType", "uniqueId", "DeskToolProvider", "_ref51", "structure", "resolveStructure", "setLayoutCollapsed", "useConfigContextFromSource", "S", "rootPaneNode", "resizablePanes", "splitPanes", "splitViews", "structureContext"]
}
